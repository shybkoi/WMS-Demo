#!/usr/bin/env python
# -*- coding: cp1251 -*-



##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
from nv_dmmain import nv_dmmain

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.0rc8'
__CHEETAH_versionTuple__ = (2, 0, 0, 'candidate', 8)
__CHEETAH_genTime__ = 1482336173.0969999
__CHEETAH_genTimestamp__ = 'Wed Dec 21 18:02:53 2016'
__CHEETAH_src__ = 'systems\\KURSSKLAD\\SELECTPLAN\\NV\\templates\\nv_dmclients.tmpl'
__CHEETAH_srcLastModified__ = 'Wed Dec 21 09:10:14 2016'
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class nv_dmclients(nv_dmmain):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        nv_dmmain.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def system_help(self, **KWS):



        ## CHEETAH: generated from #def $system_help = False at line 3, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def rcFilter(self, **KWS):



        ## CHEETAH: generated from #def rcFilter at line 6, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write(''' \t<form id="frm" class="buttons">
''')
        if VFFSL(SL,"varExists",False)('$datalist') and VFFSL(SL,"datalist",True): # generated from line 8, col 7
            write('''        \xcf\xee\xe4\xf2\xe8\xef: <select name="dst">
            <option value=null>''')
            if False:
                _('Без фильтра')
            _v = VFFSL(SL,"_",False)('Без фильтра') # "$_('\xc1\xe5\xe7 \xf4\xe8\xeb\xfc\xf2\xf0\xe0')" on line 10, col 32
            if _v is not None: write(_filter(_v, rawExpr="$_('\xc1\xe5\xe7 \xf4\xe8\xeb\xfc\xf2\xf0\xe0')")) # from line 10, col 32.
            write('''</option>
''')
            for item in VFFSL(SL,"datalist",True): # generated from line 11, col 13
                write('''                <option value=''')
                _v = VFFSL(SL,"item.DSTCODE",True) # '$item.DSTCODE' on line 12, col 31
                if _v is not None: write(_filter(_v, rawExpr='$item.DSTCODE')) # from line 12, col 31.
                write('''>''')
                _v = VFFSL(SL,"item.DSTNAME",True) # '$item.DSTNAME' on line 12, col 45
                if _v is not None: write(_filter(_v, rawExpr='$item.DSTNAME')) # from line 12, col 45.
                write('''</option>
''')
            write('''        </select>
        &nbsp;&nbsp;&nbsp;
''')
        write('''        \xcf\xe5\xf0\xe8\xee\xe4 \xef\xee\xe8\xf1\xea\xe0:
        <input id=docBeg name=docbeg type=text class=date size=7 />&nbsp;
        <input id=docEnd name=docend type=text class=date size=7 />
 \t    &nbsp;&nbsp;&nbsp;
        \xcf\xe5\xf0\xe8\xee\xe4 \xe0\xea\xf2\xf3\xe0\xeb\xfc\xed\xee\xe9 \xee\xf2\xe3\xf0\xf3\xe7\xea\xe8:
        <input id=dBeg name=dbeg type=text class=date size=7 />&nbsp;
        <input id=dEnd name=dend type=text class=date size=7 />
        &nbsp;&nbsp;&nbsp;
        <button type=submit id=btnDo><img src="''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 25, col 48
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 25, col 48.
        write('''/arrows/arrow_right.png"></button>
        <button type=button id=btnPrint><img src="''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 26, col 51
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 26, col 51.
        write('''/actions/printer.png"></button>
        &nbsp;&nbsp;&nbsp;
        <button type=button id=btnLocDoc title="\xcf\xee\xe8\xf1\xea \xe2\xed\xf3\xf2\xf0\xe5\xed\xed\xe8\xf5 \xe7\xe0\xea\xe0\xe7\xee\xe2"><img src=''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 28, col 84
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 28, col 84.
        write('''/actions/application_view_detail.png border=0></button>
\t</form>
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def rcData(self, **KWS):



        ## CHEETAH: generated from #def rcData at line 32, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''    <link href="''')
        _v = VFFSL(SL,"eng_css",True) # '$eng_css' on line 33, col 17
        if _v is not None: write(_filter(_v, rawExpr='$eng_css')) # from line 33, col 17.
        write('''/jquery.drop-checkbox.css" rel="stylesheet" type="text/css" media="screen"/>
    <link href="''')
        _v = VFFSL(SL,"eng_css",True) # '$eng_css' on line 34, col 17
        if _v is not None: write(_filter(_v, rawExpr='$eng_css')) # from line 34, col 17.
        write('''/jquery.autocomplete.css" rel="stylesheet" type="text/css" media="screen"/>
    <link href="''')
        _v = VFFSL(SL,"sps_css.KURSSKLAD",True) # '$sps_css.KURSSKLAD' on line 35, col 17
        if _v is not None: write(_filter(_v, rawExpr='$sps_css.KURSSKLAD')) # from line 35, col 17.
        write('''/k.progressbar.css" rel="stylesheet" type="text/css" media="screen"/>
    <link href="''')
        _v = VFFSL(SL,"sp_css",True) # '$sp_css' on line 36, col 17
        if _v is not None: write(_filter(_v, rawExpr='$sp_css')) # from line 36, col 17.
        write('''/NV/deliverymanager.css" rel="stylesheet" type="text/css" media="screen"/>
    <link href="''')
        _v = VFFSL(SL,"sps_css.KURSSKLAD",True) # '$sps_css.KURSSKLAD' on line 37, col 17
        if _v is not None: write(_filter(_v, rawExpr='$sps_css.KURSSKLAD')) # from line 37, col 17.
        write('''/NV/inExpenseStatIncome.css" rel="stylesheet" type="text/css" media="screen"/>
    <link href="''')
        _v = VFFSL(SL,"sps_css.KURSSKLAD",True) # '$sps_css.KURSSKLAD' on line 38, col 17
        if _v is not None: write(_filter(_v, rawExpr='$sps_css.KURSSKLAD')) # from line 38, col 17.
        write('''/tabs/jquery.tabs.css" rel="stylesheet" type="text/css" media="screen"/>
    <link href="''')
        _v = VFFSL(SL,"sps_css.KURSSKLAD",True) # '$sps_css.KURSSKLAD' on line 39, col 17
        if _v is not None: write(_filter(_v, rawExpr='$sps_css.KURSSKLAD')) # from line 39, col 17.
        write('''/tabs/jquery.tabs-ie.css" rel="stylesheet" type="text/css" media="screen"/>


''')
        # Scripts
        write('''    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 43, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 43, col 41.
        write('''/jquery.maskedinput-1.2.1.pack.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 44, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 44, col 41.
        write('''/ui.datepicker.min.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 45, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 45, col 41.
        write('''/i18n/ui.datepicker-ru.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 46, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 46, col 41.
        write('''/jquery.autocomplete.min.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 47, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 47, col 41.
        write('''/k.objectAutoComplete.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 48, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 48, col 41.
        write('''/k.Sp.DocTypes.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 49, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 49, col 41.
        write('''/wh.doclocate.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 50, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 50, col 41.
        write('''/wh.docwares.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 51, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 51, col 41.
        write('''/jquery.contextMenu.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 52, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 52, col 41.
        write('''/jquery.rightClick.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 53, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 53, col 41.
        write('''/jquery.blockUI.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 54, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 54, col 41.
        write('''/k.tdChk.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 55, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 55, col 41.
        write('''/k.progressbar.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 56, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 56, col 41.
        write('''/jquery.tabs.pack.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 57, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 57, col 41.
        write('''/NV/docConfOrder.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 58, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 58, col 41.
        write('''/NV/docInExpense.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 59, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 59, col 41.
        write('''/wh.table.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 60, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 60, col 41.
        write('''/wh.wares.js"></script>

    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sp_js",True) # '$sp_js' on line 62, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sp_js')) # from line 62, col 41.
        write('''/NV/dmclients.js"></script>

    <div id="dvWH" style="text-align:left;"></div>
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def writeBody(self, **KWS):



        ## CHEETAH: main method generated for this template
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''

''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_nv_dmclients= 'writeBody'

## END CLASS DEFINITION

if not hasattr(nv_dmclients, '_initCheetahAttributes'):
    templateAPIClass = getattr(nv_dmclients, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(nv_dmclients)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=nv_dmclients()).run()


