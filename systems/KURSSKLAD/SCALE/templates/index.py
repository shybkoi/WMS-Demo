#!/usr/bin/env python
# -*- coding: cp1251 -*-



##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
from systems.engine_main import engine_main

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.0rc8'
__CHEETAH_versionTuple__ = (2, 0, 0, 'candidate', 8)
__CHEETAH_genTime__ = 1482336172.8770001
__CHEETAH_genTimestamp__ = 'Wed Dec 21 18:02:52 2016'
__CHEETAH_src__ = 'systems\\KURSSKLAD\\SCALE\\templates\\index.tmpl'
__CHEETAH_srcLastModified__ = 'Wed Dec 21 09:10:14 2016'
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class index(engine_main):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        engine_main.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def engineData(self, **KWS):



        ## CHEETAH: generated from #def engineData     at line 3, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 4, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 4, col 41.
        write('''/jquery.rightClick.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 5, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 5, col 41.
        write('''/jquery.rowFocus.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 6, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 6, col 41.
        write('''/jquery.contextMenu.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 7, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 7, col 41.
        write('''/ui.dialog.min.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 8, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 8, col 41.
        write('''/jquery.tablesorter.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 9, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 9, col 41.
        write('''/kTblScroll.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 10, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 10, col 41.
        write('''/jquery.blockUI.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 11, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 11, col 41.
        write('''/k.progressbar.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 12, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 12, col 41.
        write('''/k.blocks.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_name.KURSSKLAD",True) # '$sps_name.KURSSKLAD' on line 13, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_name.KURSSKLAD')) # from line 13, col 41.
        write('''/REPORTS/js/k.quickhelper.js"></script>  
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 14, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 14, col 41.
        write('''/k.messages.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sp_js",True) # '$sp_js' on line 15, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sp_js')) # from line 15, col 41.
        write('''/scale.js"></script>
    <link rel="stylesheet" type="text/css" media="screen" href="''')
        _v = VFFSL(SL,"sps_css.KURSSKLAD",True) # '$sps_css.KURSSKLAD' on line 16, col 65
        if _v is not None: write(_filter(_v, rawExpr='$sps_css.KURSSKLAD')) # from line 16, col 65.
        write('''/k.progressbar.css" />
    <link rel="stylesheet" type="text/css" media="screen" href="''')
        _v = VFFSL(SL,"sp_css",True) # '$sp_css' on line 17, col 65
        if _v is not None: write(_filter(_v, rawExpr='$sp_css')) # from line 17, col 65.
        write('''/jquery.contextMenu.css"/>
    <link rel="stylesheet" type="text/css" media="screen" href="''')
        _v = VFFSL(SL,"sp_css",True) # '$sp_css' on line 18, col 65
        if _v is not None: write(_filter(_v, rawExpr='$sp_css')) # from line 18, col 65.
        write('''/scale.css"/>
    <script>
        userid=\'''')
        _v = VFFSL(SL,"userid",True) # '$userid' on line 20, col 17
        if _v is not None: write(_filter(_v, rawExpr='$userid')) # from line 20, col 17.
        write('''\';
    </script>
    <div id="ms-Filter">
        <div class="Row panel">\xcc\xe0\xe3\xe0\xe7\xe8\xed</div>
        <div class="Row" id="div-shop">

                <select name="shopid" id="shopid" class="Select">                                            
''')
        for i in VFFSL(SL,"datalist_store",True): # generated from line 27, col 21
            write('''                        <option value="''')
            _v = VFFSL(SL,"i.OBJID",True) # '$i.OBJID' on line 28, col 40
            if _v is not None: write(_filter(_v, rawExpr='$i.OBJID')) # from line 28, col 40.
            write('''"> ''')
            _v = VFFSL(SL,"i.NAME",True) # '$i.NAME' on line 28, col 51
            if _v is not None: write(_filter(_v, rawExpr='$i.NAME')) # from line 28, col 51.
            write('''</option>
''')
        write('''                </select>

        </div>
        <div class="Row panel">\xc2\xe5\xf1\xfb</div>
        <div class="Row" id="div-scale"><select name="scaleid" id="scaleid" class="Select">           
                    </select>                        
        </div>
        <div class="Row" id="div-actions">
            <div id = "admin-actions"  class="panel">
                \xc0\xe4\xec\xe8\xed. \xef\xe0\xed\xe5\xeb\xfc
                <a href="#" id=\'addwares\'><img src="''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 40, col 53
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 40, col 53.
        write('''/actions/add.png" title=\'\xc4\xee\xe1\xe0\xe2\xe8\xf2\xfc\' alt=\'\xc4\xee\xe1\xe0\xe2\xe8\xf2\xfc \xe2\xe5\xf1\xfb\' /></a>                    
''')
        # <a href="#" id='loadallwares'><img src="$sps_img.KURSSKLAD/go.png" title="Добавить на весы все товары с остатками" alt="Добавить на весы все товары с остатками" /></a>                    
        write('''            </div>
            <div id = "user-actions"  class="panel">
''')
        # <a href="#" id='editbuttons'><img src="$sps_img.KURSSKLAD/cog_edit.png" title="Сконфигурировать быстрые клавиши" alt="Сконфигурировать быстрые клавиши" /></a>                    
        write('''                <a href="#" id=\'loadwares\'><img src="''')
        _v = VFFSL(SL,"sps_img.KURSSKLAD",True) # '$sps_img.KURSSKLAD' on line 45, col 54
        if _v is not None: write(_filter(_v, rawExpr='$sps_img.KURSSKLAD')) # from line 45, col 54.
        write('''/go.png" title="\xcf\xee\xea\xe0\xe7\xe0\xf2\xfc \xf1\xee\xf1\xf2\xe0\xe2 \xe2\xe5\xf1\xee\xe2" alt="\xcf\xee\xea\xe0\xe7\xe0\xf2\xfc \xf1\xee\xf1\xf2\xe0\xe2 \xe2\xe5\xf1\xee\xe2" /></a>                    
                <a href="#" id=\'loadfile\'><img src="''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 46, col 53
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 46, col 53.
        write('''/apps/excel.png" title="\xc7\xe0\xe3\xf0\xf3\xe7\xe8\xf2\xfc \xf4\xe0\xe9\xeb" alt="\xc7\xe0\xe3\xf0\xf3\xe7\xe8\xf2\xfc \xf4\xe0\xe9\xeb" /></a>                    
                <a href="#" id=\'printwares\'><img src="''')
        _v = VFFSL(SL,"sps_img.KURSSKLAD",True) # '$sps_img.KURSSKLAD' on line 47, col 55
        if _v is not None: write(_filter(_v, rawExpr='$sps_img.KURSSKLAD')) # from line 47, col 55.
        write('''/printer.png" title="\xcf\xe5\xf7\xe0\xf2\xfc \xf2\xee\xe2\xe0\xf0\xee\xe2" alt="\xcf\xe5\xf7\xe0\xf2\xfc \xf2\xee\xe2\xe0\xf0\xee\xe2" /></a>                    
                <a href="#" id=\'refreshscale\'><img src="''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 48, col 57
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 48, col 57.
        write('''/actions/refresh.png" title=\'\xce\xe1\xed\xee\xe2\xe8\xf2\xfc\' alt=\'\xce\xe1\xed\xee\xe2\xe8\xf2\xfc\' /></a>    
                <a href="#" id=\'addwinsetid\'><img src="''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 49, col 56
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 49, col 56.
        write('''/actions/add.png" title=\'\xc4\xee\xe1\xe0\xe2\xe8\xf2\xfc \xf2\xee\xe2\xe0\xf0 \xed\xe0 \xe2\xe5\xf1\xfb\' alt=\'\xc4\xee\xe1\xe0\xe2\xe8\xf2\xfc \xf2\xee\xe2\xe0\xf0 \xed\xe0 \xe2\xe5\xf1\xfb\' /></a>     
            </div>
        </div> 
        <div id="user-message" class="Row" >      
''')
        #     Если вы добавили товар, а он не выгружается в файл, проверьте, чтобы он был весовой и цена его была больше нуля!
        write('''        </div>
    </div>
    <div id="ms-Body">
        <div id="master" style="display: none;">
            <table id="tmaster">
                <thead>
                    <tr>
                        <th colspan=\'6\'>\xd1\xee\xf1\xf2\xe0\xe2 \xed\xe0\xe1\xee\xf0\xe0</th>
                    </tr> 
                    <tr>
                        <th class=\'num\'>\xb9</th>
                        <th class=\'Name\'>\xd2\xee\xe2\xe0\xf0</th>
                        <th class=\'Code\'>\xca\xee\xe4</th>
                        <th class=\'Unit\'>\xc5\xe4. \xe8\xe7\xec.</th>
                        <th class=\'GroupNameMaster\'>\xc3\xf0\xf3\xef\xef\xe0</th>
''')
        # <th class='ProducerNameMaster'>Набор</th>
        write('''                        <th class=\'Checkbox\'><input type="checkbox" /></th>
                    </tr>    
                </thead>
                <tbody id=\'tmaster-body\'>                       
                </tbody>
                <tfoot>                
                </tfoot>      
            </table>
        </div>
        <div id="ss-master" style="display: none;">
            <table id="ss-tmaster">
                <thead>
                    <tr>
                        <th class=\'num\'>\xb9</th>
                        <th class=\'Name\'>\xcd\xe0\xe8\xec\xe5\xed\xee\xe2\xe0\xed\xe8\xe5</th>
                        <th class=\'Code\'>\xca\xee\xe4 \xf2\xee\xe2\xe0\xf0\xe0</th>
                        <th class=\'ProducerName\'>\xcf\xf0\xee\xe8\xe7\xe2\xee\xe4\xe8\xf2\xe5\xeb\xfc</th>
                        <th class=\'GroupName\'>\xc3\xf0\xf3\xef\xef\xe0</th>
                        <th class=\'SubGroupName\'>\xcf\xee\xe4\xe3\xf0\xf3\xef\xef\xe0</th>
                        <th class=\'SalePrice\'>\xd6\xe5\xed\xe0 \xef\xf0\xee\xe4\xe0\xe6\xe8</th>
                    </tr>    
                </thead>
                <tbody id=\'ss-tmaster-body\'>                       
                </tbody>
                <tfoot>                
                </tfoot>      
            </table>
        </div>
        <div id="detail">
            <table id="tdetail">
                <thead>
                    <tr>
                        <th colspan=\'6\'>\xd2\xee\xe2\xe0\xf0\xfb \xef\xee\xe7\xe8\xf6\xe8\xe8 \xed\xe0\xe1\xee\xf0\xe0</th>
                    </tr>
                    <tr>
                        <th class=\'num\'>\xb9</th>
                        <th class=\'Name\'>\xcd\xe0\xe8\xec\xe5\xed\xee\xe2\xe0\xed\xe8\xe5</th>
                        <th class=\'Code\'>\xca\xee\xe4 \xf2\xee\xe2\xe0\xf0\xe0</th>
                        <th class=\'ProducerName\'>\xcf\xf0\xee\xe8\xe7\xe2\xee\xe4\xe8\xf2\xe5\xeb\xfc</th>
                        <th class=\'GroupName\'>\xcf\xee\xe4\xe3\xf0\xf3\xef\xef\xe0</th>
                        <th class=\'SalePrice\'>\xd6\xe5\xed\xe0 \xef\xf0\xee\xe4\xe0\xe6\xe8</th>
                    </tr>    
                </thead>
                <tbody id=\'tdetail-body\'>                       
                </tbody>
                <tfoot>                
                </tfoot>      
            </table>
        </div>       
    </div>
''')
        # context menu    
        write('''    <ul id="cm-master" class="contextMenu">
       <li class="add"><a href="#add">\xc4\xee\xe1\xe0\xe2\xe8\xf2\xfc</a></li>
       <li class="delete"><a href="#delete">\xd3\xe4\xe0\xeb\xe8\xf2\xfc</a></li>
       <li class="multidelete"><a href="#multidelete">\xd3\xe4\xe0\xeb\xe8\xf2\xfc \xee\xf2\xec\xe5\xf7\xe5\xed\xed\xfb\xe5</a></li>
       <li class="detail"><a href="#showdetail">\xcf\xee\xea\xe0\xe7\xe0\xf2\xfc \xf2\xee\xe2\xe0\xf0\xfb</a></li>
       <li class="print"><a href="#priceprint">\xcf\xe5\xf7\xe0\xf2\xfc \xef\xf0\xe0\xe9\xf1-\xeb\xe8\xf1\xf2\xe0</a></li>
       <li class="getfile"><a href="#export">\xc7\xe0\xe3\xf0\xf3\xe7\xe8\xf2\xfc \xf4\xe0\xe9\xeb</a></li>
    </ul>
    <ul id="cm-waresonbutton" class="contextMenu">
       <li class="edit"><a href="#edit">\xc8\xe7\xec\xe5\xed\xe8\xf2\xfc</a></li>
       <li class="delete"><a href="#clean">\xce\xf7\xe8\xf1\xf2\xe8\xf2\xfc</a></li>
       <li class="getfile"><a href="#export">\xc7\xe0\xe3\xf0\xf3\xe7\xe8\xf2\xfc \xf4\xe0\xe9\xeb</a></li>
       <li class="print"><a href="#print">\xcf\xe5\xf7\xe0\xf2\xfc \xf6\xe5\xed\xed\xe8\xea\xee\xe2</a></li>
       <li class="print"><a href="#printbtn">\xcf\xe5\xf7\xe0\xf2\xfc \xfd\xf2\xe8\xea\xe5\xf2\xee\xea</a></li>
    </ul>
    <ul id="cm-detail" class="contextMenu">
       <li class="refresh"><a href="#drefresh">\xce\xe1\xed\xee\xe2\xe8\xf2\xfc</a></li>
    </ul>
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def writeBody(self, **KWS):



        ## CHEETAH: main method generated for this template
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_index= 'writeBody'

## END CLASS DEFINITION

if not hasattr(index, '_initCheetahAttributes'):
    templateAPIClass = getattr(index, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(index)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=index()).run()


