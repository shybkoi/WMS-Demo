#!/usr/bin/env python
# -*- coding: cp1251 -*-



##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
from systems.engine_main import engine_main
from random import random

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.0rc8'
__CHEETAH_versionTuple__ = (2, 0, 0, 'candidate', 8)
__CHEETAH_genTime__ = 1482336167.8099999
__CHEETAH_genTimestamp__ = 'Wed Dec 21 18:02:47 2016'
__CHEETAH_src__ = 'systems\\KURSSKLAD\\DOCMANAGER\\templates\\main.tmpl'
__CHEETAH_srcLastModified__ = 'Wed Dec 21 09:10:13 2016'
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class main(engine_main):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        engine_main.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def system_help(self, **KWS):



        ## CHEETAH: generated from #def $system_help = True at line 6, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def systemNavigation(self, **KWS):



        ## CHEETAH: generated from #def systemNavigation at line 9, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def adminData(self, **KWS):



        ## CHEETAH: generated from #block adminData    at line 78, col 5.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''        <script>
        var admin = 0;
        var useviewunit = ''')
        _v = VFFSL(SL,"viewunit",True) # '$viewunit' on line 81, col 27
        if _v is not None: write(_filter(_v, rawExpr='$viewunit')) # from line 81, col 27.
        write(''';
        var gtdedit = ''')
        _v = VFFSL(SL,"gtdedit",True) # '$gtdedit' on line 82, col 23
        if _v is not None: write(_filter(_v, rawExpr='$gtdedit')) # from line 82, col 23.
        write(''';
        </script>
        <div id="divFilter" style="float:left;position:relative;">
            <form id="frmScan">
                <table>
                    <tr><th>\xd8\xca</th></tr>
                    <tr><td><input type="text" name="barcode" size="8" value=""></tr>
                </table>
            </form>
            <br>
            <form id="frmFilter">
                <table>
''')
        # <tr><th><a id="aSpDocTypes">Тип операции</a></th></tr>
        write("""                    <tr><th>\xd2\xe8\xef \xee\xef\xe5\xf0\xe0\xf6\xe8\xe8</th></tr>
                    <tr><td><select name='doctype' id='cmbDocType'></select></td></tr>
""")
        # <tr><th>Подтип операции</th></tr>
        # <tr><td><select name='docsubtype' id='cmbDocSubType'></select></td></tr>
        write('''                    <tr><th>\xcf\xe5\xf0\xe8\xee\xe4</th></tr>
                    <tr><td><input type="text" id="dbeg" name="dbeg" size="8" value="">
                            <input type="text" id="dend" name="dend" size="8" value=""></td></tr>
                    <tr><td><input type=checkbox checked id=\'frmDocFilter-chkDate\'>\xcf\xee \xe4\xe0\xf2\xe5 \xe4\xee\xea\xf3\xec\xe5\xed\xf2\xe0</td></tr>
                    <tr><th>\xd1\xf2\xe0\xf2\xf3\xf1</th></tr>
                    <tr><td><select name=\'status\' id=\'cmbDocStatus\'></select></td></tr>
                    <tr><th><span id="fromobj-name">\xce\xf2 \xea\xee\xe3\xee</span></th></tr>
                    <tr><td><input type="text" id="fromobj" value=""></td></tr>
                    <tr><th><span id="throughobj-name">\xd7\xe5\xf0\xe5\xe7 \xea\xee\xe3\xee</span></th></tr>  
                    <tr><td><input type="text" id="throughobj" value=""></td></tr>
                    <tr><th><span id="toobj-name">\xca\xee\xec\xf3</span></th></tr>    
                    <tr><td><input type="text" id="toobj" value=""></td></tr>
                    <tr><th>\xcd\xee\xec\xe5\xf0 \xe4\xee\xea\xf3\xec\xe5\xed\xf2\xe0</th></tr>    
                    <tr><td><input type="text" name="docnum" style="width:100%;" value=""></td></tr>    
                    <tr><th>\xd1\xf3\xec\xec\xe0 \xec\xe5\xe6\xe4\xf3</th></tr>
                    <tr><td><input type="text" size="8" name="sumFrom" value="">
                            <input type="text" size="8" name="sumTo" value=""></td></tr>    
                    <tr><td><div class="buttons" style="text-align: right; padding:3px">
''')
        if VFFSL(SL,"opt",False)('view',None,'confBtn','element'): # generated from line 117, col 33
            write('''                                    <button type="button" id="cfgBtn" title="\xc8\xe7\xec\xe5\xed\xe5\xed\xe8\xe5 \xed\xe0\xf1\xf2\xf0\xee\xe5\xea \xf0\xe5\xe4\xe0\xea\xf2\xe8\xf0\xee\xe2\xe0\xed\xe8\xff" style="float: left;"><img border="0" src="''')
            _v = VFFSL(SL,"sps_img.KURSSKLAD",True) # '$sps_img.KURSSKLAD' on line 118, col 155
            if _v is not None: write(_filter(_v, rawExpr='$sps_img.KURSSKLAD')) # from line 118, col 155.
            write('''/wrench.png"></button>
''')
        write('''                                <button type="button" id="btnCalc" title="\xcf\xee\xf1\xf7\xe8\xf2\xe0\xf2\xfc \xf1\xf3\xec\xec\xf3"><img src="''')
        _v = VFFSL(SL,"sps_img.KURSSKLAD",True) # '$sps_img.KURSSKLAD' on line 120, col 102
        if _v is not None: write(_filter(_v, rawExpr='$sps_img.KURSSKLAD')) # from line 120, col 102.
        write('''/sum.png" border="0"></button>
                                <button type="button" title="\xd1\xee\xe7\xe4\xe0\xf2\xfc \xe4\xee\xea\xf3\xec\xe5\xed\xf2" id="btnCreateDoc"><img src="''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 121, col 108
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 121, col 108.
        write('''/actions/add.png" border="0"></button>
                                <button type="submit" title="\xc8\xf1\xea\xe0\xf2\xfc"><img src="''')
        _v = VFFSL(SL,"sps_img.KURSSKLAD",True) # '$sps_img.KURSSKLAD' on line 122, col 80
        if _v is not None: write(_filter(_v, rawExpr='$sps_img.KURSSKLAD')) # from line 122, col 80.
        write('''/magnifier.png" border="0"></button>
                            </div></td></tr>
                </table>
                <input type="hidden" name="flags" value="R">
            </form>
        </div>
        
        <div id="divTblData" style="float:left;position:relative;">
            <div id="divTblMaster" style="float:left;position:relative;"></div>
            <div id="divTblDetail" style="float:left;position:relative;"></div>
        </div>
\t\t
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def engineData(self, **KWS):



        ## CHEETAH: generated from #def engineData at line 12, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''
''')
        # Styles    
        write('''    <link href="''')
        _v = VFFSL(SL,"sps_css.KURSSKLAD",True) # '$sps_css.KURSSKLAD' on line 15, col 17
        if _v is not None: write(_filter(_v, rawExpr='$sps_css.KURSSKLAD')) # from line 15, col 17.
        write('''/k.progressbar.css" rel="stylesheet" type="text/css" media="screen"/>    
    <link href="''')
        _v = VFFSL(SL,"sps_css.KURSSKLAD",True) # '$sps_css.KURSSKLAD' on line 16, col 17
        if _v is not None: write(_filter(_v, rawExpr='$sps_css.KURSSKLAD')) # from line 16, col 17.
        write('''/jquery.popup.css" rel="stylesheet" type="text/css" media="screen"/>    
    <link href="''')
        _v = VFFSL(SL,"sps_css.KURSSKLAD",True) # '$sps_css.KURSSKLAD' on line 17, col 17
        if _v is not None: write(_filter(_v, rawExpr='$sps_css.KURSSKLAD')) # from line 17, col 17.
        write('''/tabs/jquery.tabs.css" rel="stylesheet" type="text/css" media="screen"/>    
    <link href="''')
        _v = VFFSL(SL,"eng_css",True) # '$eng_css' on line 18, col 17
        if _v is not None: write(_filter(_v, rawExpr='$eng_css')) # from line 18, col 17.
        write('''/jquery.drop-checkbox.css" rel="stylesheet" type="text/css" media="screen"/>    
    <link href="''')
        _v = VFFSL(SL,"eng_css",True) # '$eng_css' on line 19, col 17
        if _v is not None: write(_filter(_v, rawExpr='$eng_css')) # from line 19, col 17.
        write('''/jquery.autocomplete.css" rel="stylesheet" type="text/css" media="screen"/>
    <link href="''')
        _v = VFFSL(SL,"sp_css",True) # '$sp_css' on line 20, col 17
        if _v is not None: write(_filter(_v, rawExpr='$sp_css')) # from line 20, col 17.
        write('''/DocManager.css" rel="stylesheet" type="text/css" media="screen"/>       
    <link href="''')
        _v = VFFSL(SL,"sp_css",True) # '$sp_css' on line 21, col 17
        if _v is not None: write(_filter(_v, rawExpr='$sp_css')) # from line 21, col 17.
        write('''/jquery.fancybox-1.3.4.css" rel="stylesheet" type="text/css" media="screen"/>       
\t<link href="''')
        _v = VFFSL(SL,"sps_css.KURSSKLAD",True) # '$sps_css.KURSSKLAD' on line 22, col 14
        if _v is not None: write(_filter(_v, rawExpr='$sps_css.KURSSKLAD')) # from line 22, col 14.
        write('''/wh.reserve.summary.css" rel="stylesheet" type="text/css" media="screen"/>    
    
    <style>
        .ui-progressbar-indicator{
            line-height:40px;
            position:absolute;
            text-indent:-20px;
            left:50%;
            border: 1px solid black;
        }
        
        
    </style>    

''')
        # Scripts
        write('''    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 37, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 37, col 41.
        write('''/ui.datepicker.min.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 38, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 38, col 41.
        write('''/i18n/ui.datepicker-ru.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 39, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 39, col 41.
        write('''/jquery.maskedinput-1.2.1.pack.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 40, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 40, col 41.
        write('''/ui.dialog.min.js"></script>    
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 41, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 41, col 41.
        write('''/jquery.contextMenu.js"></script>    
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 42, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 42, col 41.
        write('''/jquery.rightClick.min.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 43, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 43, col 41.
        write('''/jquery.rowFocus.min.js"></script>    
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 44, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 44, col 41.
        write('''/jquery.tablesorter.min.js"></script>    
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 45, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 45, col 41.
        write('''/kTblScroll.min.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 46, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 46, col 41.
        write('''/kScrollableToDown.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 47, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 47, col 41.
        write('''/jquery.boxit.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 48, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 48, col 41.
        write('''/jquery.drop-checkbox.js"></script>
\t<script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 49, col 38
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 49, col 38.
        write('''/ui.droppable.min.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 50, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 50, col 41.
        write('''/jquery.autocomplete.min.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 51, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 51, col 41.
        write('''/jquery.form.min.js"></script>
    
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 53, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 53, col 41.
        write('''/jquery.blockUI.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 54, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 54, col 41.
        write('''/k.id.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 55, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 55, col 41.
        write('''/k.form.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 56, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 56, col 41.
        write('''/k.icons.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 57, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 57, col 41.
        write('''/k.blocks.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 58, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 58, col 41.
        write('''/k.formats.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 59, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 59, col 41.
        write('''/k.UpDown.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 60, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 60, col 41.
        write('''/k.messages.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 61, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 61, col 41.
        write('''/k.Sp.DocTypes.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 62, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 62, col 41.
        write('''/k.Sp.WaresGroups.js"></script>    
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 63, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 63, col 41.
        write('''/k.waresLocate.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 64, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 64, col 41.
        write('''/k.objectAutoComplete.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 65, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 65, col 41.
        write('''/k.tdChk.js"></script>        
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 66, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 66, col 41.
        write('''/k.progressbar.js"></script>        
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 67, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 67, col 41.
        write('''/k.report.TTN.js"></script>        
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 68, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 68, col 41.
        write('''/k.docPrint.js"></script>                
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 69, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 69, col 41.
        write('''/jquery.tabs.js"></script>                
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 70, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 70, col 41.
        write('''/jquery.popup.js"></script>    
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 71, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 71, col 41.
        write('''/taskView.js"></script>          
    
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sp_js",True) # '$sp_js' on line 73, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sp_js')) # from line 73, col 41.
        write('''/jquery.fancybox-1.3.4.pack.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 74, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 74, col 41.
        write('''/wh.reserve.summary.js"></script>\t\t
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sp_js",True) # '$sp_js' on line 75, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sp_js')) # from line 75, col 41.
        write('''/DocManager.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sp_js",True) # '$sp_js' on line 76, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sp_js')) # from line 76, col 41.
        write('''/WLImages.js"></script>

''')
        self.adminData(trans=trans)
        write('''
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def writeBody(self, **KWS):



        ## CHEETAH: main method generated for this template
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''



''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_main= 'writeBody'

## END CLASS DEFINITION

if not hasattr(main, '_initCheetahAttributes'):
    templateAPIClass = getattr(main, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(main)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=main()).run()


