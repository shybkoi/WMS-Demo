#!/usr/bin/env python
# -*- coding: cp1251 -*-



##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
from systems.engine_main import engine_main

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.0rc8'
__CHEETAH_versionTuple__ = (2, 0, 0, 'candidate', 8)
__CHEETAH_genTime__ = 1482336172.9230001
__CHEETAH_genTimestamp__ = 'Wed Dec 21 18:02:52 2016'
__CHEETAH_src__ = 'systems\\KURSSKLAD\\SELECT\\templates\\main.tmpl'
__CHEETAH_srcLastModified__ = 'Wed Dec 21 09:10:14 2016'
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class main(engine_main):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        engine_main.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def system_help(self, **KWS):



        ## CHEETAH: generated from #def $system_help = True at line 3, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def systemNavigation(self, **KWS):



        ## CHEETAH: generated from #def systemNavigation at line 6, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        # 
        #     <ul id="ulNavigation">
        #         <li><a href="SALE">Отборка</a></li>
        #         <li><a href="INCOME">Приемка</a></li>
        #     </ul>
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def adminData(self, **KWS):



        ## CHEETAH: generated from #block adminData    at line 52, col 5.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''        <div id="dvShop" style="float:left;position:relative;">
            <div id="dvShopTop" style="float:left;position:relative;"></div>
            <div id="dvShopBottom" style="float:left;position:relative;">
                <div id="divTabs" style="text-align:left;">
                    <ul>
                        <li><a href="#dvShopDocs"><span>\xc4\xee\xea\xf3\xec\xe5\xed\xf2\xfb</span></a></li>
                        <li><a href="#dvShopTaskes"><span>\xc7\xe0\xe4\xe0\xed\xe8\xff</span></a></li>
                    </ul>
                    <div id="dvShopDocs"></div>
                    <div id="dvShopTaskes"></div>
                </div>
            </div>
        </div>
        <div id="dvSplitter" style="float:left;position:relative;"></div>
        <div id="dvTask" style="float:left;position:relative;">
            <div id="dvTaskTop" style="border-bottom:1px solid;float:left;position:relative;text-align:center">
                <form id="frmFilterTask" style="float:left;position:relative;width:80%;text-align:center;vertical-align:middle;" class="buttons">
                    <b>\xcf\xe5\xf0\xe8\xee\xe4: </b>
                        <input type="text" class="period" id="dBeg" name="dBeg" value="" size="8" />
                        <input type="text" class="period" id="dEnd" name="dEnd" value="" size="8" />&nbsp;&nbsp;&nbsp;
                    <b>\xcf\xee\xea\xf3\xef\xe0\xf2\xe5\xeb\xfc: </b>
                        <input type="text" id="objName" value="" size="20"/>&nbsp;
                        <button type="submit" title="\xcf\xee\xe8\xf1\xea"><img src="''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 75, col 71
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 75, col 71.
        write('''/actions/magnifier.png" border="0"></button>&nbsp;&nbsp;&nbsp;
                    <br><br>
                </form>
                <div id="dvButtons" class="buttons" style="float:left;position:relative;width:19%;text-align:right;">
                    <button type="button" id="btnListWorkers" title="\xcf\xee\xea\xe0\xe7\xe0\xf2\xfc \xf1\xef\xe8\xf1\xee\xea \xee\xf2\xe1\xee\xf0\xf9\xe8\xea\xee\xe2"><img src="''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 79, col 108
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 79, col 108.
        write('''/actions/user.png" border="0"></button>
                    <button type="button" id="btnSummary" title="\xcf\xee\xea\xe0\xe7\xe0\xf2\xfc \xf1\xf3\xec\xec\xe0\xf0\xed\xf3\xfe \xe8\xed\xf4\xee\xf0\xec\xe0\xf6\xe8\xfe"><img src="''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 80, col 107
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 80, col 107.
        write('''/actions/sum.png" border="0"></button>
                    <button type="button" id="btnSummaryDST" title="\xcf\xee\xea\xe0\xe7\xe0\xf2\xfc \xf1\xf3\xec\xec\xe0\xf0\xed\xf3\xfe \xe8\xed\xf4\xee\xf0\xec\xe0\xf6\xe8\xfe \xef\xee \xef\xee\xe4\xf2\xe8\xef\xe0\xec \xe4\xee\xea\xf3\xec\xe5\xed\xf2\xee\xe2"><img src="''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 81, col 133
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 81, col 133.
        write('''/actions/application_view_detail.png" border="0"></button>
                </div>                
            </div>                    
            <div id="dvTaskBottom" style="float:left;position:relative;"></div>
        </div>        
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def engineData(self, **KWS):



        ## CHEETAH: generated from #def engineData at line 15, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''
''')
        # Styles
        write('''    <link href="''')
        _v = VFFSL(SL,"eng_css",True) # '$eng_css' on line 18, col 17
        if _v is not None: write(_filter(_v, rawExpr='$eng_css')) # from line 18, col 17.
        write('''/contextMenu.css" rel="stylesheet" type="text/css" media="screen"/>
    <link href="''')
        _v = VFFSL(SL,"sps_css.KURSSKLAD",True) # '$sps_css.KURSSKLAD' on line 19, col 17
        if _v is not None: write(_filter(_v, rawExpr='$sps_css.KURSSKLAD')) # from line 19, col 17.
        write('''/k.progressbar.css" rel="stylesheet" type="text/css" media="screen"/>        
    <link href="''')
        _v = VFFSL(SL,"sps_css.KURSSKLAD",True) # '$sps_css.KURSSKLAD' on line 20, col 17
        if _v is not None: write(_filter(_v, rawExpr='$sps_css.KURSSKLAD')) # from line 20, col 17.
        write('''/contextMenuStatus.css" rel="stylesheet" type="text/css" media="screen"/>
    <link href="''')
        _v = VFFSL(SL,"sps_css.KURSSKLAD",True) # '$sps_css.KURSSKLAD' on line 21, col 17
        if _v is not None: write(_filter(_v, rawExpr='$sps_css.KURSSKLAD')) # from line 21, col 17.
        write('''/tabs/jquery.tabs.css" rel="stylesheet" type="text/css" media="screen"/>
    <link href="''')
        _v = VFFSL(SL,"sps_css.KURSSKLAD",True) # '$sps_css.KURSSKLAD' on line 22, col 17
        if _v is not None: write(_filter(_v, rawExpr='$sps_css.KURSSKLAD')) # from line 22, col 17.
        write('''/tabs/jquery.tabs-ie.css" rel="stylesheet" type="text/css" media="screen"/>
    
''')
        # Scripts
        write('''    
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 26, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 26, col 41.
        write('''/ui.dialog.min.js"></script>    
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 27, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 27, col 41.
        write('''/ui.droppable.min.js"></script> 
    
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 29, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 29, col 41.
        write('''/ui.datepicker.min.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 30, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 30, col 41.
        write('''/i18n/ui.datepicker-ru.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 31, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 31, col 41.
        write('''/jquery.maskedinput-1.2.1.pack.js"></script>

    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 33, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 33, col 41.
        write('''/jquery.contextMenu.js"></script>    
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 34, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 34, col 41.
        write('''/jquery.rightClick.js"></script>    
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 35, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 35, col 41.
        write('''/jquery.rowFocus.min.js"></script>    
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 36, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 36, col 41.
        write('''/jquery.tablesorter.min.js"></script>    
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 37, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 37, col 41.
        write('''/kTblScroll.min.js"></script>
    
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 39, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 39, col 41.
        write('''/k.messages.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 40, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 40, col 41.
        write('''/k.formats.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 41, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 41, col 41.
        write('''/k.progressbar.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 42, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 42, col 41.
        write('''/k.UpDown.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 43, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 43, col 41.
        write('''/k.icons.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 44, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 44, col 41.
        write('''/k.objectLocate.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 45, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 45, col 41.
        write('''/k.form.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 46, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 46, col 41.
        write('''/jquery.tabs.pack.js"></script>
''')
        selectJS = VFFSL(SL,"sp_js",True) + '/Select' + VFFSL(SL,"versionJS",True) +'.js'
        # <script type="text/javascript" src="$sp_js/Select.js"></script>
        write('''    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"selectJS",True) # '$selectJS' on line 49, col 41
        if _v is not None: write(_filter(_v, rawExpr='$selectJS')) # from line 49, col 41.
        write('''"></script>


''')
        self.adminData(trans=trans)
        write('''
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def writeBody(self, **KWS):



        ## CHEETAH: main method generated for this template
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''

''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_main= 'writeBody'

## END CLASS DEFINITION

if not hasattr(main, '_initCheetahAttributes'):
    templateAPIClass = getattr(main, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(main)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=main()).run()


