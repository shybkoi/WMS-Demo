#!/usr/bin/env python
# -*- coding: cp1251 -*-



##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
from systems.engine_main import engine_main

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.0rc8'
__CHEETAH_versionTuple__ = (2, 0, 0, 'candidate', 8)
__CHEETAH_genTime__ = 1482336172.9779999
__CHEETAH_genTimestamp__ = 'Wed Dec 21 18:02:52 2016'
__CHEETAH_src__ = 'systems\\KURSSKLAD\\SELECT\\templates\\maintrn.tmpl'
__CHEETAH_srcLastModified__ = 'Wed Dec 21 09:10:14 2016'
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class maintrn(engine_main):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        engine_main.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def system_help(self, **KWS):



        ## CHEETAH: generated from #def $system_help = True at line 3, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def systemNavigation(self, **KWS):



        ## CHEETAH: generated from #def systemNavigation at line 6, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''     <form id="frmFilter" class="buttons" style="width: 100%">
            <b>\xc4\xee\xea\xf3\xec\xe5\xed\xf2\xfb: </b>
            <input required id=dBegClient type=text size=7 width="40%">
            <input required id=dEndClient type=text size=7 width="40%">
            <button type=button id=btnLocateClients><img src=''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 11, col 62
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 11, col 62.
        write('''/actions/magnifier.png border=0></button>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <b>\xd1\xea\xeb\xe0\xe4: </b>
            <select id=selectObj>
''')
        if VFFSL(SL,"varExists",False)('$datalist') and VFFSL(SL,"datalist",True): # generated from line 15, col 11
            for item in VFFSL(SL,"datalist",True): # generated from line 16, col 13
                write('''                <option value=''')
                _v = VFFSL(SL,"item.OBJID",True) # '$item.OBJID' on line 17, col 31
                if _v is not None: write(_filter(_v, rawExpr='$item.OBJID')) # from line 17, col 31.
                write('''>''')
                _v = VFFSL(SL,"item.OBJNAME",True) # '$item.OBJNAME' on line 17, col 43
                if _v is not None: write(_filter(_v, rawExpr='$item.OBJNAME')) # from line 17, col 43.
                write('''</option>
''')
        write('''            </select>
            &nbsp;&nbsp;&nbsp;
            <b>\xca\xeb\xe8\xe5\xed\xf2: </b><input type=text id=objName value="" size=30 />
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <b>\xc7\xe0\xe4\xe0\xed\xe8\xff: </b>
            <input required id=dBegTask type=text size=7 width="40%">
            <input required id=dEndTask type=text size=7 width="40%">
            <button type=button id=btnLocateTaskes><img src=''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 27, col 61
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 27, col 61.
        write('''/actions/magnifier.png border=0></button>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <button type=button id=btnWorkers title="\xcf\xee\xea\xe0\xe7\xe0\xf2\xfc \xf1\xef\xe8\xf1\xee\xea \xee\xf2\xe1\xee\xf0\xf9\xe8\xea\xee\xe2"><img src=''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 29, col 91
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 29, col 91.
        write('''/actions/user.png border=0></button>
            <button type=button id=btnLocDoc title="\xcf\xee\xe8\xf1\xea \xe2\xed\xf3\xf2\xf0\xe5\xed\xed\xe8\xf5 \xe7\xe0\xea\xe0\xe7\xee\xe2"><img src=''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 30, col 88
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 30, col 88.
        write('''/actions/application_view_detail.png border=0></button>
            <button type=button id=btnPalletTransitList title="\xcf\xee\xe8\xf1\xea \xef\xe0\xeb\xeb\xe5\xf2\xee\xe2 \xf1 \xf2\xf0\xe0\xed\xe7\xe8\xf2\xed\xfb\xec \xf2\xee\xe2\xe0\xf0\xee\xec"><img src=''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 31, col 110
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 31, col 110.
        write('''/actions/pallet.png border=0></button>
     </form>
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def adminData(self, **KWS):



        ## CHEETAH: generated from #block adminData at line 84, col 5.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''        <div id=dvWH>
            <div id=dvShop class=leftrel>
                <div id=dvShopTop class=leftrel></div>
                <div id=dvShopBottom class=leftrel>
                    <div id=divTabs style="text-align:left;">
                        <ul>
                            <li><a href="#dvShopOrders"><span>\xc7\xe0\xea\xe0\xe7\xfb</span></a></li>
                            <li><a href="#dvShopPallets"><span>\xcf\xe0\xeb\xeb\xe5\xf2\xfb</span></a></li>
                            <li><a href="#dvShopDocs"><span>\xc4\xee\xea\xf3\xec\xe5\xed\xf2\xfb</span></a></li>
                            <li><a href="#dvShopTaskes"><span>\xc7\xe0\xe4\xe0\xed\xe8\xff</span></a></li>
                        </ul>
                        <div id=dvShopOrders></div>
                        <div id=dvShopPallets></div>
                        <div id=dvShopDocs></div>
                        <div id=dvShopTaskes></div>
                    </div>
                </div>
            </div>
            <div id=dvSplitter class=leftrel></div>
            <div id=dvTask class=leftrel>
                <div id=dvTaskTop class=leftrel></div>
                <div id=dvTaskBottom class=leftrel></div>
            </div>
        </div>
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def engineData(self, **KWS):



        ## CHEETAH: generated from #def engineData at line 35, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''
''')
        # Styles
        write('''    <link href="''')
        _v = VFFSL(SL,"eng_css",True) # '$eng_css' on line 38, col 17
        if _v is not None: write(_filter(_v, rawExpr='$eng_css')) # from line 38, col 17.
        write('''/contextMenu.css" rel="stylesheet" type="text/css" media="screen"/>
    <link href="''')
        _v = VFFSL(SL,"sps_css.KURSSKLAD",True) # '$sps_css.KURSSKLAD' on line 39, col 17
        if _v is not None: write(_filter(_v, rawExpr='$sps_css.KURSSKLAD')) # from line 39, col 17.
        write('''/k.progressbar.css" rel="stylesheet" type="text/css" media="screen"/>
    <link href="''')
        _v = VFFSL(SL,"sps_css.KURSSKLAD",True) # '$sps_css.KURSSKLAD' on line 40, col 17
        if _v is not None: write(_filter(_v, rawExpr='$sps_css.KURSSKLAD')) # from line 40, col 17.
        write('''/contextMenuStatus.css" rel="stylesheet" type="text/css" media="screen"/>
    <link href="''')
        _v = VFFSL(SL,"sps_css.KURSSKLAD",True) # '$sps_css.KURSSKLAD' on line 41, col 17
        if _v is not None: write(_filter(_v, rawExpr='$sps_css.KURSSKLAD')) # from line 41, col 17.
        write('''/tabs/jquery.tabs.css" rel="stylesheet" type="text/css" media="screen"/>
    <link href="''')
        _v = VFFSL(SL,"sps_css.KURSSKLAD",True) # '$sps_css.KURSSKLAD' on line 42, col 17
        if _v is not None: write(_filter(_v, rawExpr='$sps_css.KURSSKLAD')) # from line 42, col 17.
        write('''/tabs/jquery.tabs-ie.css" rel="stylesheet" type="text/css" media="screen"/>
    <link href="''')
        _v = VFFSL(SL,"eng_css",True) # '$eng_css' on line 43, col 17
        if _v is not None: write(_filter(_v, rawExpr='$eng_css')) # from line 43, col 17.
        write('''/jquery.autocomplete.css" rel="stylesheet" type="text/css" media="screen"/>
    <link href="''')
        _v = VFFSL(SL,"sps_css.KURSSKLAD",True) # '$sps_css.KURSSKLAD' on line 44, col 17
        if _v is not None: write(_filter(_v, rawExpr='$sps_css.KURSSKLAD')) # from line 44, col 17.
        write('''/inOrderStatIncome.css" rel="stylesheet" type="text/css" media="screen"/>
    <link href="''')
        _v = VFFSL(SL,"sp_css",True) # '$sp_css' on line 45, col 17
        if _v is not None: write(_filter(_v, rawExpr='$sp_css')) # from line 45, col 17.
        write('''/SelectTRN.css" rel="stylesheet" type="text/css" media="screen"/>

''')
        # Scripts
        write('''
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 49, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 49, col 41.
        write('''/ui.dialog.min.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 50, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 50, col 41.
        write('''/ui.droppable.min.js"></script>

    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 52, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 52, col 41.
        write('''/ui.datepicker.min.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 53, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 53, col 41.
        write('''/i18n/ui.datepicker-ru.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 54, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 54, col 41.
        write('''/jquery.maskedinput-1.2.1.pack.js"></script>

    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 56, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 56, col 41.
        write('''/jquery.contextMenu.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 57, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 57, col 41.
        write('''/jquery.rightClick.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 58, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 58, col 41.
        write('''/jquery.rowFocus.min.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 59, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 59, col 41.
        write('''/jquery.tablesorter.min.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 60, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 60, col 41.
        write('''/jquery.autocomplete.min.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 61, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 61, col 41.
        write('''/kTblScroll.min.js"></script>

    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 63, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 63, col 41.
        write('''/k.messages.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 64, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 64, col 41.
        write('''/k.formats.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 65, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 65, col 41.
        write('''/k.progressbar.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 66, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 66, col 41.
        write('''/k.UpDown.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 67, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 67, col 41.
        write('''/k.icons.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 68, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 68, col 41.
        write('''/k.objectAutoComplete.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 69, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 69, col 41.
        write('''/k.form.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 70, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 70, col 41.
        write('''/jquery.tabs.pack.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 71, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 71, col 41.
        write('''/k.tdChk.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 72, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 72, col 41.
        write('''/k.Sp.DocTypes.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 73, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 73, col 41.
        write('''/wh.doclocate.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 74, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 74, col 41.
        write('''/wh.docwares.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 75, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 75, col 41.
        write('''/wh.table.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 76, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 76, col 41.
        write('''/PALLET/transitList.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 77, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 77, col 41.
        write('''/PALLET/transit.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 78, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 78, col 41.
        write('''/doc/docConfOrder.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 79, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 79, col 41.
        write('''/DOC/clientorder.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 80, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 80, col 41.
        write('''/wh.wares.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sps_js.KURSSKLAD",True) # '$sps_js.KURSSKLAD' on line 81, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sps_js.KURSSKLAD')) # from line 81, col 41.
        write('''/wh.selectpreview.js"></script>
    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"sp_js",True) # '$sp_js' on line 82, col 41
        if _v is not None: write(_filter(_v, rawExpr='$sp_js')) # from line 82, col 41.
        write('''/SelectTRN.js"></script>

''')
        self.adminData(trans=trans)
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def writeBody(self, **KWS):



        ## CHEETAH: main method generated for this template
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''

''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_maintrn= 'writeBody'

## END CLASS DEFINITION

if not hasattr(maintrn, '_initCheetahAttributes'):
    templateAPIClass = getattr(maintrn, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(maintrn)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=maintrn()).run()


