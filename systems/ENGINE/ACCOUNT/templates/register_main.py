#!/usr/bin/env python
# -*- coding: cp1251 -*-



##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
from systems.ENGINE.ACCOUNT.templates.account_main import account_main

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.0rc8'
__CHEETAH_versionTuple__ = (2, 0, 0, 'candidate', 8)
__CHEETAH_genTime__ = 1482336165.6489999
__CHEETAH_genTimestamp__ = 'Wed Dec 21 18:02:45 2016'
__CHEETAH_src__ = 'systems\\ENGINE\\ACCOUNT\\templates\\register_main.tmpl'
__CHEETAH_srcLastModified__ = 'Wed Dec 21 09:10:12 2016'
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class register_main(account_main):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        account_main.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def is_rf(self, field, **KWS):



        ## CHEETAH: generated from #def is_rf(field) at line 3, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        if VFFSL(SL,"field",True) in VFFSL(SL,"required_fields",True): # generated from line 4, col 5
            write("""        <div class='required_field'>*</div>
""")
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def regAddon(self, **KWS):



        ## CHEETAH: generated from #block regAddon at line 71, col 25.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        if VFFSL(SL,"varExists",False)('regaddon') and VFFSL(SL,"regaddon",True) == 1: # generated from line 72, col 29
            if VFFSL(SL,"varExists",False)('regaddon_tmpl_path'): # generated from line 73, col 33
                self._handleCheetahInclude(VFFSL(SL,"regaddon_tmpl_path",True)+"regaddon.tmpl", trans=trans, includeFrom="file", raw=False)
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def accountData(self, **KWS):



        ## CHEETAH: generated from #def accountData at line 10, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''        <script type="text/javascript" src="/ENGINE/ACCOUNT/js/register.js"></script>
        <form method="POST" action="createaccount" name="createaccount-form" id="createaccount-form">
            <div class="register-block">
                <h1>''')
        if False:
            _('Регистрация аккаунта')
        _v = VFFSL(SL,"_",False)('Регистрация аккаунта') # "$_('\xd0\xe5\xe3\xe8\xf1\xf2\xf0\xe0\xf6\xe8\xff \xe0\xea\xea\xe0\xf3\xed\xf2\xe0')" on line 14, col 21
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd0\xe5\xe3\xe8\xf1\xf2\xf0\xe0\xf6\xe8\xff \xe0\xea\xea\xe0\xf3\xed\xf2\xe0')")) # from line 14, col 21.
        write('''</h1>
                <!--Begin basic registration data-->
                <table>
                    <tbody>
                      <tr>
                        <td>\xd4\xc8\xce:''')
        _v = VFFSL(SL,"is_rf",False)('fio') # "$is_rf('fio')" on line 19, col 33
        if _v is not None: write(_filter(_v, rawExpr="$is_rf('fio')")) # from line 19, col 33.
        write('''</td>
                        <td><input type="text" value="" size="30" maxlength="80" id="fio" name="fio"></td>
                      </tr>
                      <tr>
                        <td>''')
        if False:
            _('Имя для входа (логин)')
        _v = VFFSL(SL,"_",False)('Имя для входа (логин)') # "$_('\xc8\xec\xff \xe4\xeb\xff \xe2\xf5\xee\xe4\xe0 (\xeb\xee\xe3\xe8\xed)')" on line 23, col 29
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc8\xec\xff \xe4\xeb\xff \xe2\xf5\xee\xe4\xe0 (\xeb\xee\xe3\xe8\xed)')")) # from line 23, col 29.
        write(''':''')
        _v = VFFSL(SL,"is_rf",False)('login') # "$is_rf('login')" on line 23, col 57
        if _v is not None: write(_filter(_v, rawExpr="$is_rf('login')")) # from line 23, col 57.
        write('''</td>
                        <td><input type="text" value="" size="30" maxlength="30" id="login" name="login"></td>
                      </tr>
                      <tr>
                        <td>''')
        if False:
            _('Почтовый ящик (email)')
        _v = VFFSL(SL,"_",False)('Почтовый ящик (email)') # "$_('\xcf\xee\xf7\xf2\xee\xe2\xfb\xe9 \xff\xf9\xe8\xea (email)')" on line 27, col 29
        if _v is not None: write(_filter(_v, rawExpr="$_('\xcf\xee\xf7\xf2\xee\xe2\xfb\xe9 \xff\xf9\xe8\xea (email)')")) # from line 27, col 29.
        write(''':''')
        _v = VFFSL(SL,"is_rf",False)('email') # "$is_rf('email')" on line 27, col 57
        if _v is not None: write(_filter(_v, rawExpr="$is_rf('email')")) # from line 27, col 57.
        write('''</td>
                        <td><input type="text" value="" size="30" maxlength="100" id="email" name="email"></td>
                      </tr>
                      <tr>
                        <td>''')
        if False:
            _('Пароль')
        _v = VFFSL(SL,"_",False)('Пароль') # "$_('\xcf\xe0\xf0\xee\xeb\xfc')" on line 31, col 29
        if _v is not None: write(_filter(_v, rawExpr="$_('\xcf\xe0\xf0\xee\xeb\xfc')")) # from line 31, col 29.
        write(''':''')
        _v = VFFSL(SL,"is_rf",False)('passwd') # "$is_rf('passwd')" on line 31, col 42
        if _v is not None: write(_filter(_v, rawExpr="$is_rf('passwd')")) # from line 31, col 42.
        write('''</td>
                        <td>
                            <input type="password" value="" size="30" id="passwd" name="passwd">
                            <span id="verdict_passwd" style="display: none;"></span>
                            <span id="pc-container" style="display: none;">
                                <span id="pc-indicator"><span id="pc-indicator-inline"></span></span>
                                <span id="pc-indicator-text"></span>
                            </span>
                        </td>
                      </tr>
                      <tr>
                        <td>''')
        if False:
            _('Введите пароль еще раз')
        _v = VFFSL(SL,"_",False)('Введите пароль еще раз') # "$_('\xc2\xe2\xe5\xe4\xe8\xf2\xe5 \xef\xe0\xf0\xee\xeb\xfc \xe5\xf9\xe5 \xf0\xe0\xe7')" on line 42, col 29
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc2\xe2\xe5\xe4\xe8\xf2\xe5 \xef\xe0\xf0\xee\xeb\xfc \xe5\xf9\xe5 \xf0\xe0\xe7')")) # from line 42, col 29.
        write(''':''')
        _v = VFFSL(SL,"is_rf",False)('passwd2') # "$is_rf('passwd2')" on line 42, col 58
        if _v is not None: write(_filter(_v, rawExpr="$is_rf('passwd2')")) # from line 42, col 58.
        write('''</td>
                        <td><input type="password" value="" size="30" id="passwd2" name="passwd2">
                            <span id="verdict_passwd2" style="display: none;"></span>
                            <span id="repeat-text" style="display: none;"></span>
                        </td>
                      </tr>
                      <tr>
                        <td>''')
        if False:
            _('Контактный телефон')
        _v = VFFSL(SL,"_",False)('Контактный телефон') # "$_('\xca\xee\xed\xf2\xe0\xea\xf2\xed\xfb\xe9 \xf2\xe5\xeb\xe5\xf4\xee\xed')" on line 49, col 29
        if _v is not None: write(_filter(_v, rawExpr="$_('\xca\xee\xed\xf2\xe0\xea\xf2\xed\xfb\xe9 \xf2\xe5\xeb\xe5\xf4\xee\xed')")) # from line 49, col 29.
        write(''':''')
        _v = VFFSL(SL,"is_rf",False)('phonenumber') # "$is_rf('phonenumber')" on line 49, col 54
        if _v is not None: write(_filter(_v, rawExpr="$is_rf('phonenumber')")) # from line 49, col 54.
        write('''</td>
                        <td><input type="text" value="" size="30" maxlength="30" id="phonenumber" name="phonenumber"></td>
                      </tr>
''')
        if VFFSL(SL,"varExists",False)('tarifs') and VFFSL(SL,"tarifs",True): # generated from line 52, col 23
            write('''                          <tr>
                             <td>''')
            if False:
                _('Тариф')
            _v = VFFSL(SL,"_",False)('Тариф') # "$_('\xd2\xe0\xf0\xe8\xf4')" on line 54, col 34
            if _v is not None: write(_filter(_v, rawExpr="$_('\xd2\xe0\xf0\xe8\xf4')")) # from line 54, col 34.
            write(''':''')
            _v = VFFSL(SL,"is_rf",False)('tarif') # "$is_rf('tarif')" on line 54, col 46
            if _v is not None: write(_filter(_v, rawExpr="$is_rf('tarif')")) # from line 54, col 46.
            write('''</td>
                             <td>
                                <select id="tarif" name="tarif">
''')
            for tarif in VFFSL(SL,"tarifs",True): # generated from line 57, col 37
                if VFFSL(SL,"tarif.IS_DEFAULT",True): # generated from line 58, col 40
                    selected = 'selected'
                else: # generated from line 60, col 40
                    selected = ''
                write('''                                       <option value="''')
                _v = VFFSL(SL,"tarif.ID_TAR",True) # '$tarif.ID_TAR' on line 63, col 55
                if _v is not None: write(_filter(_v, rawExpr='$tarif.ID_TAR')) # from line 63, col 55.
                write('''" ''')
                _v = VFFSL(SL,"selected",True) # '$selected' on line 63, col 70
                if _v is not None: write(_filter(_v, rawExpr='$selected')) # from line 63, col 70.
                write('''>''')
                _v = VFFSL(SL,"tarif.TAR_NAME",True) # '$tarif.TAR_NAME' on line 63, col 80
                if _v is not None: write(_filter(_v, rawExpr='$tarif.TAR_NAME')) # from line 63, col 80.
                write('''</option>
''')
            write('''                                </select>
                             </td>
                           </tr>
''')
        write('''                        <!--End basic registration data-->
                        <!--Begin additional registration data-->
''')
        self.regAddon(trans=trans)
        write('''                        <!--End additional registration data-->
''')
        if VFFSL(SL,"useCaptcha",True) == 1: # generated from line 79, col 25
            write('''                            <script type="text/javascript">
                            var RecaptchaOptions = {
                               lang : \'ru\',
                            };
                            </script>
                          <tr>
                            <td>''')
            if False:
                _('Защита от роботов')
            _v = VFFSL(SL,"_",False)('Защита от роботов') # "$_('\xc7\xe0\xf9\xe8\xf2\xe0 \xee\xf2 \xf0\xee\xe1\xee\xf2\xee\xe2')" on line 86, col 33
            if _v is not None: write(_filter(_v, rawExpr="$_('\xc7\xe0\xf9\xe8\xf2\xe0 \xee\xf2 \xf0\xee\xe1\xee\xf2\xee\xe2')")) # from line 86, col 33.
            write(''':''')
            _v = VFFSL(SL,"is_rf",False)('recaptcha') # "$is_rf('recaptcha')" on line 86, col 57
            if _v is not None: write(_filter(_v, rawExpr="$is_rf('recaptcha')")) # from line 86, col 57.
            write('''</td>
                            <td>
                                ''')
            if False:
                _('Введите символы, представленные на картинке ниже.')
            _v = VFFSL(SL,"_",False)('Введите символы, представленные на картинке ниже.') # "$_('\xc2\xe2\xe5\xe4\xe8\xf2\xe5 \xf1\xe8\xec\xe2\xee\xeb\xfb, \xef\xf0\xe5\xe4\xf1\xf2\xe0\xe2\xeb\xe5\xed\xed\xfb\xe5 \xed\xe0 \xea\xe0\xf0\xf2\xe8\xed\xea\xe5 \xed\xe8\xe6\xe5.')" on line 88, col 33
            if _v is not None: write(_filter(_v, rawExpr="$_('\xc2\xe2\xe5\xe4\xe8\xf2\xe5 \xf1\xe8\xec\xe2\xee\xeb\xfb, \xef\xf0\xe5\xe4\xf1\xf2\xe0\xe2\xeb\xe5\xed\xed\xfb\xe5 \xed\xe0 \xea\xe0\xf0\xf2\xe8\xed\xea\xe5 \xed\xe8\xe6\xe5.')")) # from line 88, col 33.
            write('''<br>
                                ''')
            _v = VFFSL(SL,"CaptchaHtml",True) # '$CaptchaHtml' on line 89, col 33
            if _v is not None: write(_filter(_v, rawExpr='$CaptchaHtml')) # from line 89, col 33.
            write('''
                                ''')
            if False:
                _('Буквы вводятся без учета регистра.')
            _v = VFFSL(SL,"_",False)('Буквы вводятся без учета регистра.') # "$_('\xc1\xf3\xea\xe2\xfb \xe2\xe2\xee\xe4\xff\xf2\xf1\xff \xe1\xe5\xe7 \xf3\xf7\xe5\xf2\xe0 \xf0\xe5\xe3\xe8\xf1\xf2\xf0\xe0.')" on line 90, col 33
            if _v is not None: write(_filter(_v, rawExpr="$_('\xc1\xf3\xea\xe2\xfb \xe2\xe2\xee\xe4\xff\xf2\xf1\xff \xe1\xe5\xe7 \xf3\xf7\xe5\xf2\xe0 \xf0\xe5\xe3\xe8\xf1\xf2\xf0\xe0.')")) # from line 90, col 33.
            write('''<br>
                            </td>
                          </tr>
''')
        write('''                    </tbody>
                </table>
                <input type="SUBMIT" value="''')
        if False:
            _('Я принимаю условия. Создайте мой аккаунт.')
        _v = VFFSL(SL,"_",False)('Я принимаю условия. Создайте мой аккаунт.') # "$_('\xdf \xef\xf0\xe8\xed\xe8\xec\xe0\xfe \xf3\xf1\xeb\xee\xe2\xe8\xff. \xd1\xee\xe7\xe4\xe0\xe9\xf2\xe5 \xec\xee\xe9 \xe0\xea\xea\xe0\xf3\xed\xf2.')" on line 96, col 45
        if _v is not None: write(_filter(_v, rawExpr="$_('\xdf \xef\xf0\xe8\xed\xe8\xec\xe0\xfe \xf3\xf1\xeb\xee\xe2\xe8\xff. \xd1\xee\xe7\xe4\xe0\xe9\xf2\xe5 \xec\xee\xe9 \xe0\xea\xea\xe0\xf3\xed\xf2.')")) # from line 96, col 45.
        write('''" name="submitbutton" id="submitbutton" style="width: 42em;">
            </div>
        </form>
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def writeBody(self, **KWS):



        ## CHEETAH: main method generated for this template
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''

''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_register_main= 'writeBody'

## END CLASS DEFINITION

if not hasattr(register_main, '_initCheetahAttributes'):
    templateAPIClass = getattr(register_main, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(register_main)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=register_main()).run()


