#!/usr/bin/env python
# -*- coding: cp1251 -*-



##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
import conf.engine_conf as cfg

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.0rc8'
__CHEETAH_versionTuple__ = (2, 0, 0, 'candidate', 8)
__CHEETAH_genTime__ = 1482336167.277
__CHEETAH_genTimestamp__ = 'Wed Dec 21 18:02:47 2016'
__CHEETAH_src__ = 'systems\\ENGINE\\templates\\login_change_passwd.tmpl'
__CHEETAH_srcLastModified__ = 'Wed Dec 21 09:10:13 2016'
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class login_change_passwd(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        Template.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>''')
        if False:
            _('Изменение временного пароля')
        _v = VFFSL(SL,"_",False)('Изменение временного пароля') # "$_('\xc8\xe7\xec\xe5\xed\xe5\xed\xe8\xe5 \xe2\xf0\xe5\xec\xe5\xed\xed\xee\xe3\xee \xef\xe0\xf0\xee\xeb\xff')" on line 5, col 8
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc8\xe7\xec\xe5\xed\xe5\xed\xe8\xe5 \xe2\xf0\xe5\xec\xe5\xed\xed\xee\xe3\xee \xef\xe0\xf0\xee\xeb\xff')")) # from line 5, col 8.
        write('''</title>
<link rel="stylesheet" type="text/css" media="screen" href="/ENGINE/LOGIN/import.css">
<link rel="stylesheet" type="text/css" media="screen" href="''')
        _v = VFFSL(SL,"eng_css",True) # '$eng_css' on line 7, col 61
        if _v is not None: write(_filter(_v, rawExpr='$eng_css')) # from line 7, col 61.
        write('''/login/login_change_passwd.css">
<script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 8, col 37
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 8, col 37.
        write('''/jquery-1.3.2.min.js"></script>
<script>
    jQuery(document).ready(function() {
        // \xe7\xe0\xef\xee\xeb\xed\xe5\xed\xe8\xe5 \xf4\xee\xf0\xec\xfb \xef\xe0\xf0\xe0\xec\xe5\xf2\xf0\xe0\xec\xe8
''')
        if VFFSL(SL,"varExists",False)('fieldvalues'): # generated from line 12, col 9
            for field, val in VFN(VFFSL(SL,"fieldvalues",True),"items",False)(): # generated from line 13, col 13
                write('''                jQuery("#''')
                _v = VFFSL(SL,"field",True) # '$field' on line 14, col 27
                if _v is not None: write(_filter(_v, rawExpr='$field')) # from line 14, col 27.
                write('''").val("''')
                _v = VFFSL(SL,"val",True) # '$val' on line 14, col 41
                if _v is not None: write(_filter(_v, rawExpr='$val')) # from line 14, col 41.
                write('''");
''')
        write('''        // \xf1\xee\xee\xe1\xf9\xe5\xed\xe8\xff \xee\xe1 \xee\xf8\xe8\xe1\xea\xe0\xf5
''')
        if VFFSL(SL,"varExists",False)('fields'): # generated from line 18, col 9
            for field in VFFSL(SL,"fields",True): # generated from line 19, col 13
                write('''                jQuery("#''')
                _v = VFFSL(SL,"field.name",True) # '$field.name' on line 20, col 27
                if _v is not None: write(_filter(_v, rawExpr='$field.name')) # from line 20, col 27.
                write('''").after("<div class=\'errormsg\'>''')
                _v = VFFSL(SL,"field.errmes",True) # '$field.errmes' on line 20, col 70
                if _v is not None: write(_filter(_v, rawExpr='$field.errmes')) # from line 20, col 70.
                write('''</div>");
''')
        write('''    });
</script>
</head>
<body>
<div id="header">
</div>

<div align="center">
<div id="main">
    <form method="POST" action="login_change_passwd" id="login-change-passwd-form">
        <div class="changepasswd-block">

            <table>
                <thead>
                    <tr><th colspan="2">''')
        if False:
            _('Изменение временного пароля пользователя')
        _v = VFFSL(SL,"_",False)('Изменение временного пароля пользователя') # "$_('\xc8\xe7\xec\xe5\xed\xe5\xed\xe8\xe5 \xe2\xf0\xe5\xec\xe5\xed\xed\xee\xe3\xee \xef\xe0\xf0\xee\xeb\xff \xef\xee\xeb\xfc\xe7\xee\xe2\xe0\xf2\xe5\xeb\xff')" on line 37, col 41
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc8\xe7\xec\xe5\xed\xe5\xed\xe8\xe5 \xe2\xf0\xe5\xec\xe5\xed\xed\xee\xe3\xee \xef\xe0\xf0\xee\xeb\xff \xef\xee\xeb\xfc\xe7\xee\xe2\xe0\xf2\xe5\xeb\xff')")) # from line 37, col 41.
        write('''</th></tr>
                    <tr><th colspan="2">''')
        _v = VFFSL(SL,"username",True) # '$username' on line 38, col 41
        if _v is not None: write(_filter(_v, rawExpr='$username')) # from line 38, col 41.
        write('''</th></tr>
                </thead>
                <tbody>

''')
        self._handleCheetahInclude('../systems/ENGINE/PROFILE/templates/passwd_verify.tmpl', trans=trans, includeFrom="file", raw=False)
        write('''
                </tbody>
            </table>
        </div>
        <div id="error-wrap-login-change-passwd">
''')
        if VFFSL(SL,"varExists",False)('$mes') and VFFSL(SL,"mes",True): # generated from line 48, col 13
            write('''                <span id="error-exclamation-login-change-passwd">''')
            if False:
                _('Ошибка: ')
            _v = VFFSL(SL,"_",False)('Ошибка: ') # "$_('\xce\xf8\xe8\xe1\xea\xe0: ')" on line 49, col 66
            if _v is not None: write(_filter(_v, rawExpr="$_('\xce\xf8\xe8\xe1\xea\xe0: ')")) # from line 49, col 66.
            write('''</span><span id="error-login-change-passwd">''')
            _v = VFFSL(SL,"mes",True) # '$mes' on line 49, col 124
            if _v is not None: write(_filter(_v, rawExpr='$mes')) # from line 49, col 124.
            write('''</span>
''')
        write('''        </div>
        <div class="buttons">
            <button id=\'change-btn\' class="submit" type="submit">''')
        if False:
            _('Изменить пароль')
        _v = VFFSL(SL,"_",False)('Изменить пароль') # "$_('\xc8\xe7\xec\xe5\xed\xe8\xf2\xfc \xef\xe0\xf0\xee\xeb\xfc')" on line 53, col 66
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc8\xe7\xec\xe5\xed\xe8\xf2\xfc \xef\xe0\xf0\xee\xeb\xfc')")) # from line 53, col 66.
        write('''</button>
        </div>
        <input type="hidden" name="uid" value="''')
        _v = VFFSL(SL,"uid",True) # '$uid' on line 55, col 48
        if _v is not None: write(_filter(_v, rawExpr='$uid')) # from line 55, col 48.
        write('''">
    </form>
</div>
</div>

</body>
</html>
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_login_change_passwd= 'respond'

## END CLASS DEFINITION

if not hasattr(login_change_passwd, '_initCheetahAttributes'):
    templateAPIClass = getattr(login_change_passwd, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(login_change_passwd)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=login_change_passwd()).run()


