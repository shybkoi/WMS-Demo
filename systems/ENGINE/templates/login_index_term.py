#!/usr/bin/env python
# -*- coding: cp1251 -*-



##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
import conf.engine_conf as cfg
from systems.engine_main_term import engine_main_term

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.0rc8'
__CHEETAH_versionTuple__ = (2, 0, 0, 'candidate', 8)
__CHEETAH_genTime__ = 1482336167.3559999
__CHEETAH_genTimestamp__ = 'Wed Dec 21 18:02:47 2016'
__CHEETAH_src__ = 'systems\\ENGINE\\templates\\login_index_term.tmpl'
__CHEETAH_srcLastModified__ = 'Wed Dec 21 09:10:13 2016'
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class login_index_term(engine_main_term):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        engine_main_term.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def engineData_term(self, **KWS):



        ## CHEETAH: generated from #def engineData_term at line 4, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''
<div align = "center">
''')
        if VFFSL(SL,"varExists",False)('$termname'): # generated from line 7, col 1
            if VFFSL(SL,"termname",True) != '' and VFFSL(SL,"termname",True) is not None: # generated from line 8, col 5
                write('''        ''')
                _v = VFFSL(SL,"termname",True) # '$termname' on line 9, col 9
                if _v is not None: write(_filter(_v, rawExpr='$termname')) # from line 9, col 9.
                write('''
''')
        write('''
''')
        if VFFSL(SL,"varExists",False)('$termusername'): # generated from line 13, col 1
            write('''    <br/>\xcf\xee\xeb\xfc\xe7\xee\xe2\xe0\xf2\xe5\xeb\xfc:
''')
            if VFFSL(SL,"termusername",True) != '' and VFFSL(SL,"termusername",True) is not None: # generated from line 15, col 5
                write('''        ''')
                _v = VFFSL(SL,"termusername",True) # '$termusername' on line 16, col 9
                if _v is not None: write(_filter(_v, rawExpr='$termusername')) # from line 16, col 9.
                write('''<br/><br/>
''')
            else: # generated from line 17, col 5
                write('''        \xed\xe5 \xef\xf0\xe8\xe2\xff\xe7\xe0\xed<br/><br/>
''')
        write('''
<form id="login_term" action="login_term" method=\'POST\'>
''')
        if VFFSL(SL,"mes",True) != 'termnum_is_lost': # generated from line 23, col 5
            write('''        \xce\xf2\xf1\xea\xe0\xed\xe8\xf0\xf3\xe9\xf2\xe5 \xc2\xe0\xf8 \xd8\xca<br/>
        <input type=
''')
            if cfg.TERMINAL_BARCODE_ASTERISKS: # generated from line 26, col 9
                write('''            "password"
''')
            else: # generated from line 28, col 9
                write('''            "text"
''')
            write('''        id=\'code\' name="code" class="scanBarcode">
''')
        write('''
    <br/>
    <p id="error">
''')
        if VFFSL(SL,"varExists",False)('$mes'): # generated from line 36, col 9
            if VFFSL(SL,"mes",True) != '' and VFFSL(SL,"mes",True) is not None: # generated from line 37, col 13
                if VFFSL(SL,"mes",True) == 'termnum_is_lost': # generated from line 38, col 17
                    write('''                    \xc1\xfb\xeb\xe0 \xef\xee\xf2\xe5\xf0\xff\xed\xe0 \xf1\xe2\xff\xe7\xfc \xf1 \xf1\xe5\xf0\xe2\xe5\xf0\xee\xec. \xd0\xe5\xe8\xed\xe8\xf6\xe8\xe0\xeb\xe8\xe7\xe0\xf6\xe8\xff \xee\xe1\xee\xf0\xf3\xe4\xee\xe2\xe0\xed\xe8\xff...
''')
                else: # generated from line 40, col 17
                    write('''                    ''')
                    _v = VFFSL(SL,"mes",True) # '$mes' on line 41, col 21
                    if _v is not None: write(_filter(_v, rawExpr='$mes')) # from line 41, col 21.
                    write('''
''')
        write('''    </p>
</form>
</div>
<script type="text/javascript">
''')
        if VFFSL(SL,"mes",True) == 'termnum_is_lost': # generated from line 49, col 5
            write('''        $(document).ready(function() {
            try{
                setTimeout(\'location.href = "''')
            _v = VFFSL(SL,"cfg.TERMINAL_START_PAGE",True) # '$cfg.TERMINAL_START_PAGE' on line 52, col 46
            if _v is not None: write(_filter(_v, rawExpr='$cfg.TERMINAL_START_PAGE')) # from line 52, col 46.
            write('''"\', 3000);
            }catch(e){
                setTimeout(location.href = "''')
            _v = VFFSL(SL,"cfg.init_url",True) # '$cfg.init_url' on line 54, col 45
            if _v is not None: write(_filter(_v, rawExpr='$cfg.init_url')) # from line 54, col 45.
            write('''", 3000);
            }
        });
''')
        else: # generated from line 57, col 5
            write('''        $(document).ready(function() {
            $(\'#code\').focus();
            $(\'#code\').kInputScan();
                $("#login_term").submit(function(){
''')
            # проверка в js
            write("""                    if (!$('#code').val()) {
                        $('#error').text('\xd8\xca \xef\xf3\xf1\xf2');
                        return false;
                    }
                    else
                        return true;
                });
        });
""")
        write('''</script>
<script type="text/javascript">
    $.rebuildObjArray();
</script>
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def writeBody(self, **KWS):



        ## CHEETAH: main method generated for this template
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_login_index_term= 'writeBody'

## END CLASS DEFINITION

if not hasattr(login_index_term, '_initCheetahAttributes'):
    templateAPIClass = getattr(login_index_term, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(login_index_term)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=login_index_term()).run()


