#!/usr/bin/env python
# -*- coding: cp1251 -*-



##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
from systems.engine_main import engine_main

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.0rc8'
__CHEETAH_versionTuple__ = (2, 0, 0, 'candidate', 8)
__CHEETAH_genTime__ = 1482323863.812977
__CHEETAH_genTimestamp__ = 'Wed Dec 21 16:37:43 2016'
__CHEETAH_src__ = 'systems/ENGINE/PROFILE/templates/profile_main.tmpl'
__CHEETAH_srcLastModified__ = 'Wed Nov 27 12:19:03 2013'
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class profile_main(engine_main):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        engine_main.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def systemNavigation(self, **KWS):



        ## CHEETAH: generated from #def systemNavigation at line 3, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''      <ul>\r
        <li><a href="theme">''')
        if False:
            _('Темы оформления')
        _v = VFFSL(SL,"_",False)('Темы оформления') # "$_('\xd2\xe5\xec\xfb \xee\xf4\xee\xf0\xec\xeb\xe5\xed\xe8\xff')" on line 5, col 29
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd2\xe5\xec\xfb \xee\xf4\xee\xf0\xec\xeb\xe5\xed\xe8\xff')")) # from line 5, col 29.
        write('''</a></li>\r
        <li><a href="passwd">''')
        if False:
            _('Пароль')
        _v = VFFSL(SL,"_",False)('Пароль') # "$_('\xcf\xe0\xf0\xee\xeb\xfc')" on line 6, col 30
        if _v is not None: write(_filter(_v, rawExpr="$_('\xcf\xe0\xf0\xee\xeb\xfc')")) # from line 6, col 30.
        write('''</a></li>\r
''')
        if VFFSL(SL,"varExists",False)('profileaddon') and VFFSL(SL,"profileaddon",True) == 1: # generated from line 7, col 9
            write('''            <li><a href="info">''')
            if False:
                _('Учетные данные')
            _v = VFFSL(SL,"_",False)('Учетные данные') # "$_('\xd3\xf7\xe5\xf2\xed\xfb\xe5 \xe4\xe0\xed\xed\xfb\xe5')" on line 8, col 32
            if _v is not None: write(_filter(_v, rawExpr="$_('\xd3\xf7\xe5\xf2\xed\xfb\xe5 \xe4\xe0\xed\xed\xfb\xe5')")) # from line 8, col 32.
            write('''</a></li>\r
''')
        write('''      </ul>\r
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def profileData(self, **KWS):



        ## CHEETAH: generated from #block profileData at line 14, col 9.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''            ''')
        if False:
            _('Редактирование профиля пользователя. Выберите пункт меню.')
        _v = VFFSL(SL,"_",False)('Редактирование профиля пользователя. Выберите пункт меню.') # "$_('\xd0\xe5\xe4\xe0\xea\xf2\xe8\xf0\xee\xe2\xe0\xed\xe8\xe5 \xef\xf0\xee\xf4\xe8\xeb\xff \xef\xee\xeb\xfc\xe7\xee\xe2\xe0\xf2\xe5\xeb\xff. \xc2\xfb\xe1\xe5\xf0\xe8\xf2\xe5 \xef\xf3\xed\xea\xf2 \xec\xe5\xed\xfe.')" on line 15, col 13
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd0\xe5\xe4\xe0\xea\xf2\xe8\xf0\xee\xe2\xe0\xed\xe8\xe5 \xef\xf0\xee\xf4\xe8\xeb\xff \xef\xee\xeb\xfc\xe7\xee\xe2\xe0\xf2\xe5\xeb\xff. \xc2\xfb\xe1\xe5\xf0\xe8\xf2\xe5 \xef\xf3\xed\xea\xf2 \xec\xe5\xed\xfe.')")) # from line 15, col 13.
        write('''\r
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def engineData(self, **KWS):



        ## CHEETAH: generated from #def engineData at line 12, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''    <div id = "profileData">\r
''')
        self.profileData(trans=trans)
        write('''    </div>\r
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def writeBody(self, **KWS):



        ## CHEETAH: main method generated for this template
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_profile_main= 'writeBody'

## END CLASS DEFINITION

if not hasattr(profile_main, '_initCheetahAttributes'):
    templateAPIClass = getattr(profile_main, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(profile_main)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=profile_main()).run()


