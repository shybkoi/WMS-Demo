#!/usr/bin/env python
# -*- coding: cp1251 -*-



##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.0rc8'
__CHEETAH_versionTuple__ = (2, 0, 0, 'candidate', 8)
__CHEETAH_genTime__ = 1482336166.3039999
__CHEETAH_genTimestamp__ = 'Wed Dec 21 18:02:46 2016'
__CHEETAH_src__ = 'systems\\ENGINE\\ADMINPANEL\\templates\\admin_systems_systems.tmpl'
__CHEETAH_srcLastModified__ = 'Wed Dec 21 09:10:12 2016'
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class admin_systems_systems(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        Template.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''<table id="tbl_systems" style="border: 2px ridge #FFE4E1; border-spacing: 0px" class="treetable">
  <thead>
      <tr>
        <th>\xb9</th>
        <th>ID</th>
        <th>\xc8\xec\xff</th>
        <th>\xd1\xf1\xfb\xeb\xea\xe0</th>
        <th>\xcf\xe0\xef\xea\xe0</th>
        <th>\xca\xeb\xe0\xf1\xf1</th>
        <th>\xcc\xee\xe4\xf3\xeb\xfc</th>
''')
        # <th>Лого</th>
        # <th>Родит</th>
        write('''        <th>ID BASE</th>
        <th>\xd1\xeb\xe0\xf2\xfc</th>
        <th>ID MAIL</th>
        <th>\xd4\xee\xf0\xec\xe0\xf2 \xc4/\xc2</th>
        <th>\xd4\xee\xf0\xec\xe0\xf2 \xc2</th-->
        <th>\xce\xef\xf6\xe8\xe8</th>
''')
        # <th>Сорт</th>
        write('''        <th>\xce\xf2\xea\xeb</th>
        <th>LASTDATE</th>
      </tr>
  </thead>
  <tbody id="tbl_systems_tbody">
''')
        N = 1
        for item in VFFSL(SL,"datalist",True): # generated from line 27, col 9
            write("""            <tr id='""")
            _v = VFFSL(SL,"item.ID_SYSTEM",True) # '$item.ID_SYSTEM' on line 28, col 21
            if _v is not None: write(_filter(_v, rawExpr='$item.ID_SYSTEM')) # from line 28, col 21.
            write("""' higher='""")
            _v = VFFSL(SL,"item.HIGHER",True) # '$item.HIGHER' on line 28, col 46
            if _v is not None: write(_filter(_v, rawExpr='$item.HIGHER')) # from line 28, col 46.
            write('''\'>
                <td class="har counter">''')
            _v = VFFSL(SL,"N",True) # '$N' on line 29, col 41
            if _v is not None: write(_filter(_v, rawExpr='$N')) # from line 29, col 41.
            write('''</td>
                <td class="hac">''')
            _v = VFFSL(SL,"item.ID_SYSTEM",True) # '$item.ID_SYSTEM' on line 30, col 33
            if _v is not None: write(_filter(_v, rawExpr='$item.ID_SYSTEM')) # from line 30, col 33.
            write('''</td>
''')
            # <td nowrap class="show_name">$item.SPACES$item.SHOW_NAME</td>
            write('''                <td nowrap class="show_name">''')
            _v = VFFSL(SL,"item.SHOW_NAME",True) # '$item.SHOW_NAME' on line 32, col 46
            if _v is not None: write(_filter(_v, rawExpr='$item.SHOW_NAME')) # from line 32, col 46.
            write('''</td>
                <td>''')
            _v = VFFSL(SL,"item.REF_NAME",True) # '$item.REF_NAME' on line 33, col 21
            if _v is not None: write(_filter(_v, rawExpr='$item.REF_NAME')) # from line 33, col 21.
            write('''</td>
                <td>''')
            _v = VFFSL(SL,"item.FOLDER_NAME",True) # '$item.FOLDER_NAME' on line 34, col 21
            if _v is not None: write(_filter(_v, rawExpr='$item.FOLDER_NAME')) # from line 34, col 21.
            write('''</td>
                <td>''')
            _v = VFFSL(SL,"item.CLASS_NAME",True) # '$item.CLASS_NAME' on line 35, col 21
            if _v is not None: write(_filter(_v, rawExpr='$item.CLASS_NAME')) # from line 35, col 21.
            write('''</td>
                <td>''')
            _v = VFFSL(SL,"item.MODULE_NAME",True) # '$item.MODULE_NAME' on line 36, col 21
            if _v is not None: write(_filter(_v, rawExpr='$item.MODULE_NAME')) # from line 36, col 21.
            write('''</td>
''')
            # <td class="hac">$item.LOGO</td>
            # <td class="hac">$item.HIGHER</td>
            write('''                <td class="hac">''')
            _v = VFFSL(SL,"item.ID_BASE",True) # '$item.ID_BASE' on line 39, col 33
            if _v is not None: write(_filter(_v, rawExpr='$item.ID_BASE')) # from line 39, col 33.
            write('''</td>
                <td class="hac">''')
            _v = VFFSL(SL,"item.SEND_BUG_MAIL",True) # '$item.SEND_BUG_MAIL' on line 40, col 33
            if _v is not None: write(_filter(_v, rawExpr='$item.SEND_BUG_MAIL')) # from line 40, col 33.
            write('''</td>
                <td class="hac">''')
            _v = VFFSL(SL,"item.ID_MAIL",True) # '$item.ID_MAIL' on line 41, col 33
            if _v is not None: write(_filter(_v, rawExpr='$item.ID_MAIL')) # from line 41, col 33.
            write('''</td>
                <td nowrap>''')
            _v = VFFSL(SL,"item.DATE_TIME_FORMAT",True) # '$item.DATE_TIME_FORMAT' on line 42, col 28
            if _v is not None: write(_filter(_v, rawExpr='$item.DATE_TIME_FORMAT')) # from line 42, col 28.
            write('''</td>
                <td nowrap>''')
            _v = VFFSL(SL,"item.TIME_FORMAT",True) # '$item.TIME_FORMAT' on line 43, col 28
            if _v is not None: write(_filter(_v, rawExpr='$item.TIME_FORMAT')) # from line 43, col 28.
            write('''</td>
                <td class="hac">
''')
            if VFFSL(SL,"xml_file_exist",False)(VFFSL(SL,"item.ID_SYSTEM",True)): # generated from line 45, col 21
                write('''                        <a class="edit_sys_options" title="\xd0\xe5\xe4\xe0\xea\xf2\xe8\xf0\xee\xe2\xe0\xf2\xfc \xee\xef\xf6\xe8\xe8" href="javascript: void(0);"><img border=0 src="''')
                _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 46, col 128
                if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 46, col 128.
                write('''/actions/edit.png" style="background-color: transparent; vertical-align: middle"/></a>
''')
            else: # generated from line 47, col 21
                write('''                        <a class="add_sys_options" title="\xc4\xee\xe1\xe0\xe2\xe8\xf2\xfc \xee\xef\xf6\xe8\xe8" href="javascript: void(0);"><img src="''')
                _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 48, col 113
                if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 48, col 113.
                write('''/actions/add.png" style="vertical-align: middle"></a>
''')
            write('''                    </td>
''')
            # <td class="har">$item.ORDERBY</td>
            write('''                <td class="hac">''')
            _v = VFFSL(SL,"item.DISABLED",True) # '$item.DISABLED' on line 52, col 33
            if _v is not None: write(_filter(_v, rawExpr='$item.DISABLED')) # from line 52, col 33.
            write('''</td>
                <td nowrap>''')
            _orig_filter_79796422 = _filter
            filterName = 'LongDateTimeWSecFilter'
            if self._CHEETAH__filters.has_key("LongDateTimeWSecFilter"):
                _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
            else:
                _filter = self._CHEETAH__currentFilter = \
			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
            _v = VFFSL(SL,"item.LASTDATE",True) # '$item.LASTDATE' on line 53, col 59
            if _v is not None: write(_filter(_v, rawExpr='$item.LASTDATE')) # from line 53, col 59.
            write(''' ''')
            _filter = _orig_filter_79796422
            write('''
            </tr>
''')
            N = VFFSL(SL,"N",True)+1
        write('''  </tbody>
</table>
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_admin_systems_systems= 'respond'

## END CLASS DEFINITION

if not hasattr(admin_systems_systems, '_initCheetahAttributes'):
    templateAPIClass = getattr(admin_systems_systems, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(admin_systems_systems)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=admin_systems_systems()).run()


