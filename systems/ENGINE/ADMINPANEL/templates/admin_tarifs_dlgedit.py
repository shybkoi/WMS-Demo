#!/usr/bin/env python
# -*- coding: cp1251 -*-



##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.0rc8'
__CHEETAH_versionTuple__ = (2, 0, 0, 'candidate', 8)
__CHEETAH_genTime__ = 1482336166.3770001
__CHEETAH_genTimestamp__ = 'Wed Dec 21 18:02:46 2016'
__CHEETAH_src__ = 'systems\\ENGINE\\ADMINPANEL\\templates\\admin_tarifs_dlgedit.tmpl'
__CHEETAH_srcLastModified__ = 'Wed Dec 21 09:10:12 2016'
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class admin_tarifs_dlgedit(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        Template.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''<form id="dlgedit_form" class="full_height">
  <table style=\'width: 100%\'>
    <tr><th>''')
        if False:
            _('ID')
        _v = VFFSL(SL,"_",False)('ID') # "$_('ID')" on line 4, col 13
        if _v is not None: write(_filter(_v, rawExpr="$_('ID')")) # from line 4, col 13.
        write("""</th><td  style='width: 60%'>
        <span id='dlgedit_id'></span>
    </td></tr>

    <tr><th>""")
        if False:
            _('Название')
        _v = VFFSL(SL,"_",False)('Название') # "$_('\xcd\xe0\xe7\xe2\xe0\xed\xe8\xe5')" on line 8, col 13
        if _v is not None: write(_filter(_v, rawExpr="$_('\xcd\xe0\xe7\xe2\xe0\xed\xe8\xe5')")) # from line 8, col 13.
        write("""</th><td>
        <input type='text' id='dlgedit_tar_name' name='dlgedit_tar_name' style='width: 100%' value='' maxlength='80'/>
    </td></tr>

    <tr><th>""")
        if False:
            _('Описание')
        _v = VFFSL(SL,"_",False)('Описание') # "$_('\xce\xef\xe8\xf1\xe0\xed\xe8\xe5')" on line 12, col 13
        if _v is not None: write(_filter(_v, rawExpr="$_('\xce\xef\xe8\xf1\xe0\xed\xe8\xe5')")) # from line 12, col 13.
        write("""</th><td>
        <textarea id='dlgedit_tar_desc' name='dlgedit_tar_desc' style='width: 100%' value='' rows='8' maxlength='32000'/>
    </td></tr>

    <tr><th>""")
        if False:
            _('Сортировка (целое число)')
        _v = VFFSL(SL,"_",False)('Сортировка (целое число)') # "$_('\xd1\xee\xf0\xf2\xe8\xf0\xee\xe2\xea\xe0 (\xf6\xe5\xeb\xee\xe5 \xf7\xe8\xf1\xeb\xee)')" on line 16, col 13
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd1\xee\xf0\xf2\xe8\xf0\xee\xe2\xea\xe0 (\xf6\xe5\xeb\xee\xe5 \xf7\xe8\xf1\xeb\xee)')")) # from line 16, col 13.
        write("""</th><td>
        <input type='text' id='dlgedit_orderby' name='dlgedit_orderby' style='width: 100%' value='' maxlength='9'/>
    </td></tr>

    <tr><th>""")
        if False:
            _('Срок действия (в днях)')
        _v = VFFSL(SL,"_",False)('Срок действия (в днях)') # "$_('\xd1\xf0\xee\xea \xe4\xe5\xe9\xf1\xf2\xe2\xe8\xff (\xe2 \xe4\xed\xff\xf5)')" on line 20, col 13
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd1\xf0\xee\xea \xe4\xe5\xe9\xf1\xf2\xe2\xe8\xff (\xe2 \xe4\xed\xff\xf5)')")) # from line 20, col 13.
        write("""</th><td>
        <input type='text' id='dlgedit_expire_days' name='dlgedit_expire_days' style='width: 100%' value='' maxlength='9'/>
    </td></tr>

    <tr><th>""")
        if False:
            _('Напоминать за (дней)')
        _v = VFFSL(SL,"_",False)('Напоминать за (дней)') # "$_('\xcd\xe0\xef\xee\xec\xe8\xed\xe0\xf2\xfc \xe7\xe0 (\xe4\xed\xe5\xe9)')" on line 24, col 13
        if _v is not None: write(_filter(_v, rawExpr="$_('\xcd\xe0\xef\xee\xec\xe8\xed\xe0\xf2\xfc \xe7\xe0 (\xe4\xed\xe5\xe9)')")) # from line 24, col 13.
        write('''</th><td>
        <input type=\'text\' id=\'dlgedit_remind_days\' name=\'dlgedit_remind_days\' style=\'width: 100%\' value=\'\' maxlength=\'9\'/>
    </td></tr>
  </table>

</form>
<div class="buttons save footer_btns right_aligned_btns">
    <button type="button" id="dlgedit_save_btn"><img src="''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 31, col 59
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 31, col 59.
        write('''/actions/accept.png" alt=""/>&nbsp;''')
        if False:
            _('Сохранить')
        _v = VFFSL(SL,"_",False)('Сохранить') # "$_('\xd1\xee\xf5\xf0\xe0\xed\xe8\xf2\xfc')" on line 31, col 102
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd1\xee\xf5\xf0\xe0\xed\xe8\xf2\xfc')")) # from line 31, col 102.
        write('''</button>&nbsp;
    <button type="button" id="dlgedit_cancel_btn"><img src="''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 32, col 61
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 32, col 61.
        write('''/actions/cancel.png" alt=""/>&nbsp;''')
        if False:
            _('Отмена')
        _v = VFFSL(SL,"_",False)('Отмена') # "$_('\xce\xf2\xec\xe5\xed\xe0')" on line 32, col 104
        if _v is not None: write(_filter(_v, rawExpr="$_('\xce\xf2\xec\xe5\xed\xe0')")) # from line 32, col 104.
        write('''</button>
</div>
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_admin_tarifs_dlgedit= 'respond'

## END CLASS DEFINITION

if not hasattr(admin_tarifs_dlgedit, '_initCheetahAttributes'):
    templateAPIClass = getattr(admin_tarifs_dlgedit, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(admin_tarifs_dlgedit)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=admin_tarifs_dlgedit()).run()


