#!/usr/bin/env python
# -*- coding: cp1251 -*-



##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.0rc8'
__CHEETAH_versionTuple__ = (2, 0, 0, 'candidate', 8)
__CHEETAH_genTime__ = 1482336166.0710001
__CHEETAH_genTimestamp__ = 'Wed Dec 21 18:02:46 2016'
__CHEETAH_src__ = 'systems\\ENGINE\\ADMINPANEL\\templates\\admin_roles_edit_opt.tmpl'
__CHEETAH_srcLastModified__ = 'Wed Dec 21 09:10:12 2016'
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class admin_roles_edit_opt(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        Template.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''<form id="dlgoptedit_form" class="full_height">
  <table class="vertical_top">
    <tr><th>''')
        if False:
            _('Роли')
        _v = VFFSL(SL,"_",False)('Роли') # "$_('\xd0\xee\xeb\xe8')" on line 4, col 13
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd0\xee\xeb\xe8')")) # from line 4, col 13.
        write('''</th>
        <td>
            <input id="dlgoptedit_roles_edt" readonly name="dlgoptedit_roles_edt" type="text"  size="45" value=""/>
            <span class="buttons">
                <button type="button" id="dlgoptedit_select_roles_btn"><img src="/ENGINE/images/actions/find.png"/>&nbsp;''')
        if False:
            _('Выбрать')
        _v = VFFSL(SL,"_",False)('Выбрать') # "$_('\xc2\xfb\xe1\xf0\xe0\xf2\xfc')" on line 8, col 122
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc2\xfb\xe1\xf0\xe0\xf2\xfc')")) # from line 8, col 122.
        write('''</button>
            </span>
        </td>
    </tr>
    <tr>
        <th>''')
        if False:
            _('Тип')
        _v = VFFSL(SL,"_",False)('Тип') # "$_('\xd2\xe8\xef')" on line 13, col 13
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd2\xe8\xef')")) # from line 13, col 13.
        write("""</th>
        <td>
            <select name='dlgoptedit_type_cmb' id='dlgoptedit_type_cmb'>
""")
        for item in VFFSL(SL,"datalist_types",True): # generated from line 16, col 13
            write('''                <option value="''')
            _v = VFFSL(SL,"item.TYPE_ID",True) # '$item.TYPE_ID' on line 17, col 32
            if _v is not None: write(_filter(_v, rawExpr='$item.TYPE_ID')) # from line 17, col 32.
            write('''">''')
            _v = VFFSL(SL,"item.TYPE_NAME",True) # '$item.TYPE_NAME' on line 17, col 47
            if _v is not None: write(_filter(_v, rawExpr='$item.TYPE_NAME')) # from line 17, col 47.
            write(''' (''')
            _v = VFFSL(SL,"item.TYPE_ID",True) # '$item.TYPE_ID' on line 17, col 64
            if _v is not None: write(_filter(_v, rawExpr='$item.TYPE_ID')) # from line 17, col 64.
            write(''')</option>
''')
        write('''            </select>
        </td>
    </tr>
    <tr><th>''')
        if False:
            _('Объект')
        _v = VFFSL(SL,"_",False)('Объект') # "$_('\xce\xe1\xfa\xe5\xea\xf2')" on line 22, col 13
        if _v is not None: write(_filter(_v, rawExpr="$_('\xce\xe1\xfa\xe5\xea\xf2')")) # from line 22, col 13.
        write('''</th>
        <td>
            <strong style="margin-left: 5px; margin-right: 5px">''')
        if False:
            _('ID')
        _v = VFFSL(SL,"_",False)('ID') # "$_('ID')" on line 24, col 65
        if _v is not None: write(_filter(_v, rawExpr="$_('ID')")) # from line 24, col 65.
        write('''</strong><input id="dlgoptedit_obj_id_edt" name="dlgoptedit_obj_id_edt" type="text" size="15" value=""/>
            <strong style="margin-left: 5px; margin-right: 5px">''')
        if False:
            _('Имя')
        _v = VFFSL(SL,"_",False)('Имя') # "$_('\xc8\xec\xff')" on line 25, col 65
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc8\xec\xff')")) # from line 25, col 65.
        write('''</strong><input id="dlgoptedit_obj_name_edt" name="dlgoptedit_obj_name_edt" type="text" size="15" value=""/>
            <span class="buttons">
                <button type="button" id="dlgoptedit_select_obj_btn"><img src="/ENGINE/images/actions/find.png"/>&nbsp;''')
        if False:
            _('Выбрать по типу')
        _v = VFFSL(SL,"_",False)('Выбрать по типу') # "$_('\xc2\xfb\xe1\xf0\xe0\xf2\xfc \xef\xee \xf2\xe8\xef\xf3')" on line 27, col 120
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc2\xfb\xe1\xf0\xe0\xf2\xfc \xef\xee \xf2\xe8\xef\xf3')")) # from line 27, col 120.
        write('''</button>
            </span>
        </td>
    </tr>
    <tr><th>''')
        if False:
            _('Опция')
        _v = VFFSL(SL,"_",False)('Опция') # "$_('\xce\xef\xf6\xe8\xff')" on line 31, col 13
        if _v is not None: write(_filter(_v, rawExpr="$_('\xce\xef\xf6\xe8\xff')")) # from line 31, col 13.
        write('''</th>
        <td>
            <input id="dlgoptedit_opt_edt" readonly name="dlgoptedit_opt_edt" type="text" size="45" value=""/>
            <span class="buttons">
                <button type="button" id="dlgoptedit_select_opt_btn"><img src="/ENGINE/images/actions/find.png"/>&nbsp;''')
        if False:
            _('Выбрать')
        _v = VFFSL(SL,"_",False)('Выбрать') # "$_('\xc2\xfb\xe1\xf0\xe0\xf2\xfc')" on line 35, col 120
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc2\xfb\xe1\xf0\xe0\xf2\xfc')")) # from line 35, col 120.
        write('''</button>
            </span>
        </td>
    </tr>
    <tr>
        <td colspan="2">
            <div align=\'center\' class=\'rewrite_rule_check\' style=\'display: none;\'>
                <input type=\'checkbox\' id=\'rewrite_rule_box\'  title=\'\xcf\xf0\xe8 \xee\xf2\xec\xe5\xf7\xe5\xed\xed\xee\xec \xf4\xeb\xe0\xe6\xea\xe5 \xef\xf0\xee\xe8\xe7\xee\xe9\xe4\xb8\xf2 \xf3\xe4\xe0\xeb\xe5\xed\xe8\xe5 \xe0\xf2\xf0\xe8\xe1\xf3\xf2\xee\xe2, \xed\xe5 \xe2\xee\xf8\xe5\xe4\xf8\xe8\xf5 \xe2 \xf1\xef\xe8\xf1\xee\xea, \xef\xee \xe2\xfb\xe1\xf0\xe0\xed\xed\xfb\xec \xf0\xee\xeb\xff\xec\'/>
                <label for=\'rewrite_rule_box\' title=\'\xcf\xf0\xe8 \xee\xf2\xec\xe5\xf7\xe5\xed\xed\xee\xec \xf4\xeb\xe0\xe6\xea\xe5 \xef\xf0\xee\xe8\xe7\xee\xe9\xe4\xb8\xf2 \xf3\xe4\xe0\xeb\xe5\xed\xe8\xe5 \xe0\xf2\xf0\xe8\xe1\xf3\xf2\xee\xe2, \xed\xe5 \xe2\xee\xf8\xe5\xe4\xf8\xe8\xf5 \xe2 \xf1\xef\xe8\xf1\xee\xea, \xef\xee \xe2\xfb\xe1\xf0\xe0\xed\xed\xfb\xec \xf0\xee\xeb\xff\xec\'>''')
        if False:
            _('Синхронизировать атрибуты опции выбранных ролей')
        _v = VFFSL(SL,"_",False)('Синхронизировать атрибуты опции выбранных ролей') # "$_('\xd1\xe8\xed\xf5\xf0\xee\xed\xe8\xe7\xe8\xf0\xee\xe2\xe0\xf2\xfc \xe0\xf2\xf0\xe8\xe1\xf3\xf2\xfb \xee\xef\xf6\xe8\xe8 \xe2\xfb\xe1\xf0\xe0\xed\xed\xfb\xf5 \xf0\xee\xeb\xe5\xe9')" on line 43, col 149
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd1\xe8\xed\xf5\xf0\xee\xed\xe8\xe7\xe8\xf0\xee\xe2\xe0\xf2\xfc \xe0\xf2\xf0\xe8\xe1\xf3\xf2\xfb \xee\xef\xf6\xe8\xe8 \xe2\xfb\xe1\xf0\xe0\xed\xed\xfb\xf5 \xf0\xee\xeb\xe5\xe9')")) # from line 43, col 149.
        write('''</label>
            </div>
            <div align="center"><strong>''')
        if False:
            _('Атрибуты')
        _v = VFFSL(SL,"_",False)('Атрибуты') # "$_('\xc0\xf2\xf0\xe8\xe1\xf3\xf2\xfb')" on line 45, col 41
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc0\xf2\xf0\xe8\xe1\xf3\xf2\xfb')")) # from line 45, col 41.
        write('''</strong></div>
            <div>
                <table id="dlgoptedit_tbl_attrs">
                    <thead>
                        <tr>
                            <th>''')
        if False:
            _('Имя')
        _v = VFFSL(SL,"_",False)('Имя') # "$_('\xc8\xec\xff')" on line 50, col 33
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc8\xec\xff')")) # from line 50, col 33.
        write('''</th>
                            <th>''')
        if False:
            _('Значение')
        _v = VFFSL(SL,"_",False)('Значение') # "$_('\xc7\xed\xe0\xf7\xe5\xed\xe8\xe5')" on line 51, col 33
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc7\xed\xe0\xf7\xe5\xed\xe8\xe5')")) # from line 51, col 33.
        write('''</th>
                            <th>''')
        if False:
            _('Слияние')
        _v = VFFSL(SL,"_",False)('Слияние') # "$_('\xd1\xeb\xe8\xff\xed\xe8\xe5')" on line 52, col 33
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd1\xeb\xe8\xff\xed\xe8\xe5')")) # from line 52, col 33.
        write('''</th>
                            <th><a id=\'dlgoptedit_clear_attrs\' title="\xd3\xe4\xe0\xeb\xe8\xf2\xfc \xe2\xf1\xb8" href="#"><img src="/ENGINE/images/actions/delete.png"/></a></th>
                        </tr>
                    </thead>
                    <tbody id="dlgoptedit_tbl_attrs_tbody">
                    </tbody>
                </table>
            </div>
        </td>
    </tr>
  </table>
</form>

<div class="buttons footer_btns">
    <span class="left_aligned_btns">
        <button title="\xc4\xee\xe1\xe0\xe2\xe8\xf2\xfc \xe0\xf2\xf2\xf0\xe8\xe1\xf3\xf2" type="button" id="dlgoptedit_add_opt_btn"><img src="/ENGINE/images/actions/add.png"/></button>&nbsp;
        <button type="button" id="dlgoptedit_select_attrs_btn"><img src="/ENGINE/images/actions/find.png"/>&nbsp;''')
        if False:
            _('Добавить из существующих у опции')
        _v = VFFSL(SL,"_",False)('Добавить из существующих у опции') # "$_('\xc4\xee\xe1\xe0\xe2\xe8\xf2\xfc \xe8\xe7 \xf1\xf3\xf9\xe5\xf1\xf2\xe2\xf3\xfe\xf9\xe8\xf5 \xf3 \xee\xef\xf6\xe8\xe8')" on line 68, col 114
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc4\xee\xe1\xe0\xe2\xe8\xf2\xfc \xe8\xe7 \xf1\xf3\xf9\xe5\xf1\xf2\xe2\xf3\xfe\xf9\xe8\xf5 \xf3 \xee\xef\xf6\xe8\xe8')")) # from line 68, col 114.
        write('''</button>
        <button type="button" id="dlgoptedit_from_all_options"><img src="/ENGINE/images/actions/edit2.png"/>&nbsp;''')
        if False:
            _('Из опций системы')
        _v = VFFSL(SL,"_",False)('Из опций системы') # "$_('\xc8\xe7 \xee\xef\xf6\xe8\xe9 \xf1\xe8\xf1\xf2\xe5\xec\xfb')" on line 69, col 115
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc8\xe7 \xee\xef\xf6\xe8\xe9 \xf1\xe8\xf1\xf2\xe5\xec\xfb')")) # from line 69, col 115.
        write('''</button>
    </span>


    <span class="right_aligned_btns">
        <button type="button" id="dlgoptedit_save_btn"><img src="/ENGINE/images/actions/accept.png"/>&nbsp;''')
        if False:
            _('OK')
        _v = VFFSL(SL,"_",False)('OK') # "$_('OK')" on line 74, col 108
        if _v is not None: write(_filter(_v, rawExpr="$_('OK')")) # from line 74, col 108.
        write('''</button>&nbsp;
        <button type="button" id="dlgoptedit_cancel_btn"><img src="/ENGINE/images/actions/cancel.png"/>&nbsp;''')
        if False:
            _('Отмена')
        _v = VFFSL(SL,"_",False)('Отмена') # "$_('\xce\xf2\xec\xe5\xed\xe0')" on line 75, col 110
        if _v is not None: write(_filter(_v, rawExpr="$_('\xce\xf2\xec\xe5\xed\xe0')")) # from line 75, col 110.
        write('''</button>
    </span>
</div>

''')
        # Dialog Add/Edit Attr
        write('''<div id="dlgattredit" class="dialog flora" align="center"></div>

''')
        # Dialog From System Options
        write('''<div id="dlgfromopts" class="dialog flora" align="center" style="position: relative;"></div>

''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_admin_roles_edit_opt= 'respond'

## END CLASS DEFINITION

if not hasattr(admin_roles_edit_opt, '_initCheetahAttributes'):
    templateAPIClass = getattr(admin_roles_edit_opt, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(admin_roles_edit_opt)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=admin_roles_edit_opt()).run()


