#!/usr/bin/env python
# -*- coding: cp1251 -*-



##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.0rc8'
__CHEETAH_versionTuple__ = (2, 0, 0, 'candidate', 8)
__CHEETAH_genTime__ = 1482336166.392
__CHEETAH_genTimestamp__ = 'Wed Dec 21 18:02:46 2016'
__CHEETAH_src__ = 'systems\\ENGINE\\ADMINPANEL\\templates\\admin_tarifs_dlglayers.tmpl'
__CHEETAH_srcLastModified__ = 'Wed Dec 21 09:10:12 2016'
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class admin_tarifs_dlglayers(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        Template.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''<div id="dlglayers_caption"></div>
<table id="tbl_layers" class="full_height">
  <thead>
    <tr>
      <th>''')
        if False:
            _('Отключен')
        _v = VFFSL(SL,"_",False)('Отключен') # "$_('\xce\xf2\xea\xeb\xfe\xf7\xe5\xed')" on line 6, col 11
        if _v is not None: write(_filter(_v, rawExpr="$_('\xce\xf2\xea\xeb\xfe\xf7\xe5\xed')")) # from line 6, col 11.
        write('''</th>
      <th>''')
        if False:
            _('№ п/п')
        _v = VFFSL(SL,"_",False)('№ п/п') # "$_('\xb9 \xef/\xef')" on line 7, col 11
        if _v is not None: write(_filter(_v, rawExpr="$_('\xb9 \xef/\xef')")) # from line 7, col 11.
        write('''</th>
      <th>''')
        if False:
            _('Код')
        _v = VFFSL(SL,"_",False)('Код') # "$_('\xca\xee\xe4')" on line 8, col 11
        if _v is not None: write(_filter(_v, rawExpr="$_('\xca\xee\xe4')")) # from line 8, col 11.
        write('''</th>
      <th>''')
        if False:
            _('Организация')
        _v = VFFSL(SL,"_",False)('Организация') # "$_('\xce\xf0\xe3\xe0\xed\xe8\xe7\xe0\xf6\xe8\xff')" on line 9, col 11
        if _v is not None: write(_filter(_v, rawExpr="$_('\xce\xf0\xe3\xe0\xed\xe8\xe7\xe0\xf6\xe8\xff')")) # from line 9, col 11.
        write('''</th>
      <th>''')
        if False:
            _('Дата тарифа')
        _v = VFFSL(SL,"_",False)('Дата тарифа') # "$_('\xc4\xe0\xf2\xe0 \xf2\xe0\xf0\xe8\xf4\xe0')" on line 10, col 11
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc4\xe0\xf2\xe0 \xf2\xe0\xf0\xe8\xf4\xe0')")) # from line 10, col 11.
        write('''</th>
    </tr>
  </thead>
  <tbody id="tbl_layers_tbody">
''')
        N = 1
        for layer in VFFSL(SL,"layers",True): # generated from line 15, col 9
            write('''            <tr id="l_''')
            _v = VFFSL(SL,"layer.LAYER_ID",True) # '$layer.LAYER_ID' on line 16, col 23
            if _v is not None: write(_filter(_v, rawExpr='$layer.LAYER_ID')) # from line 16, col 23.
            write('''">
                <td class="hac disabled"><input type="checkbox"
''')
            if VFFSL(SL,"layer.DISABLED",True) is not None and VFFSL(SL,"layer.DISABLED",True) != 0: # generated from line 18, col 21
                write('''                        checked
''')
            write('''                    ></td>
                <td class="har enum">''')
            _v = VFFSL(SL,"N",True) # '$N' on line 22, col 38
            if _v is not None: write(_filter(_v, rawExpr='$N')) # from line 22, col 38.
            write('''</td>
                <td class="code">''')
            _v = VFFSL(SL,"layer.CODE",True) # '$layer.CODE' on line 23, col 34
            if _v is not None: write(_filter(_v, rawExpr='$layer.CODE')) # from line 23, col 34.
            write('''</td>
                <td class="organization">''')
            _v = VFFSL(SL,"layer.ORGANIZATION",True) # '$layer.ORGANIZATION' on line 24, col 42
            if _v is not None: write(_filter(_v, rawExpr='$layer.ORGANIZATION')) # from line 24, col 42.
            write('''</td>
                <td class="date_from hac">''')
            _orig_filter_50231168 = _filter
            filterName = 'DateFilter'
            if self._CHEETAH__filters.has_key("DateFilter"):
                _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
            else:
                _filter = self._CHEETAH__currentFilter = \
			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
            _v = VFFSL(SL,"layer.DATE_FROM",True) # '$layer.DATE_FROM' on line 25, col 62
            if _v is not None: write(_filter(_v, rawExpr='$layer.DATE_FROM')) # from line 25, col 62.
            write(''' ''')
            _filter = _orig_filter_50231168
            write('''
            </tr>
''')
            N = VFFSL(SL,"N",True)+1
        write('''  </tbody>
</table>
<div class="buttons save footer_btns">
  <button type="button" id="dlglayers_save_btn"><img src="/ENGINE/images/actions/accept.png" alt=""/>&nbsp;''')
        if False:
            _('Закрыть')
        _v = VFFSL(SL,"_",False)('Закрыть') # "$_('\xc7\xe0\xea\xf0\xfb\xf2\xfc')" on line 32, col 108
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc7\xe0\xea\xf0\xfb\xf2\xfc')")) # from line 32, col 108.
        write('''</button>&nbsp;
</div>
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_admin_tarifs_dlglayers= 'respond'

## END CLASS DEFINITION

if not hasattr(admin_tarifs_dlglayers, '_initCheetahAttributes'):
    templateAPIClass = getattr(admin_tarifs_dlglayers, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(admin_tarifs_dlglayers)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=admin_tarifs_dlglayers()).run()


