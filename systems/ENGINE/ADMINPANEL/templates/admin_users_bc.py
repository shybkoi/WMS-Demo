#!/usr/bin/env python
# -*- coding: cp1251 -*-



##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.0rc8'
__CHEETAH_versionTuple__ = (2, 0, 0, 'candidate', 8)
__CHEETAH_genTime__ = 1482336166.523
__CHEETAH_genTimestamp__ = 'Wed Dec 21 18:02:46 2016'
__CHEETAH_src__ = 'systems\\ENGINE\\ADMINPANEL\\templates\\admin_users_bc.tmpl'
__CHEETAH_srcLastModified__ = 'Wed Dec 21 09:10:13 2016'
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class admin_users_bc(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        Template.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''
<div class="full_height">
  <div id="dlglistBC_caption"></div>
  <br/>
  <table id="dlglistBC_bc_tbl">
    <thead>
      <tr>
        <th>''')
        if False:
            _('Тип кода')
        _v = VFFSL(SL,"_",False)('Тип кода') # "$_('\xd2\xe8\xef \xea\xee\xe4\xe0')" on line 9, col 13
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd2\xe8\xef \xea\xee\xe4\xe0')")) # from line 9, col 13.
        write('''</th>
        <th>''')
        if False:
            _('Код')
        _v = VFFSL(SL,"_",False)('Код') # "$_('\xca\xee\xe4')" on line 10, col 13
        if _v is not None: write(_filter(_v, rawExpr="$_('\xca\xee\xe4')")) # from line 10, col 13.
        write('''</th>
        <th>''')
        if False:
            _('Дата генерации')
        _v = VFFSL(SL,"_",False)('Дата генерации') # "$_('\xc4\xe0\xf2\xe0 \xe3\xe5\xed\xe5\xf0\xe0\xf6\xe8\xe8')" on line 11, col 13
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc4\xe0\xf2\xe0 \xe3\xe5\xed\xe5\xf0\xe0\xf6\xe8\xe8')")) # from line 11, col 13.
        write('''</th>
        <th></th>
        <th>''')
        if False:
            _('ШК')
        _v = VFFSL(SL,"_",False)('ШК') # "$_('\xd8\xca')" on line 13, col 13
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd8\xca')")) # from line 13, col 13.
        write('''</th>
        <th>''')
        if False:
            _('QR')
        _v = VFFSL(SL,"_",False)('QR') # "$_('QR')" on line 14, col 13
        if _v is not None: write(_filter(_v, rawExpr="$_('QR')")) # from line 14, col 13.
        write('''</th>
      </tr>
    </thead>
    <tbody>
''')
        for item in VFFSL(SL,"barcodes",True): # generated from line 18, col 9
            write('''            <tr id="dlglistBC_''')
            _v = VFFSL(SL,"item.ID_TYPE",True) # '${item.ID_TYPE}' on line 19, col 31
            if _v is not None: write(_filter(_v, rawExpr='${item.ID_TYPE}')) # from line 19, col 31.
            write('''">
                <td class=\'hal bc_type_name\'>''')
            _v = VFFSL(SL,"item.TYPE_NAME",True) # '$item.TYPE_NAME' on line 20, col 46
            if _v is not None: write(_filter(_v, rawExpr='$item.TYPE_NAME')) # from line 20, col 46.
            write("""</td>
                <td class='hac bc'>""")
            _v = VFFSL(SL,"item.BARCODE",True) # '$item.BARCODE' on line 21, col 36
            if _v is not None: write(_filter(_v, rawExpr='$item.BARCODE')) # from line 21, col 36.
            write("""</td>
                <td class='lastdate'>""")
            _v = VFFSL(SL,"item.LASTDATE",True) # '$item.LASTDATE' on line 22, col 38
            if _v is not None: write(_filter(_v, rawExpr='$item.LASTDATE')) # from line 22, col 38.
            write('''</td>
                <td class="hac delete_bc"><a title="''')
            if False:
                _('Удалить ШК')
            _v = VFFSL(SL,"_",False)('Удалить ШК') # "$_('\xd3\xe4\xe0\xeb\xe8\xf2\xfc \xd8\xca')" on line 23, col 53
            if _v is not None: write(_filter(_v, rawExpr="$_('\xd3\xe4\xe0\xeb\xe8\xf2\xfc \xd8\xca')")) # from line 23, col 53.
            write('''" href="javascript:void(0);"><img style="background-color: transparent" border=0 src="''')
            _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 23, col 155
            if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 23, col 155.
            write('''/actions/delete.png" /></a></td>
                <td class="hac print_bc"><a title="''')
            if False:
                _('Печатать ШК')
            _v = VFFSL(SL,"_",False)('Печатать ШК') # "$_('\xcf\xe5\xf7\xe0\xf2\xe0\xf2\xfc \xd8\xca')" on line 24, col 52
            if _v is not None: write(_filter(_v, rawExpr="$_('\xcf\xe5\xf7\xe0\xf2\xe0\xf2\xfc \xd8\xca')")) # from line 24, col 52.
            write('''" href="javascript:void(0);"><img style="background-color: transparent" border=0 src="''')
            _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 24, col 155
            if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 24, col 155.
            write('''/actions/bc.png" /></a></td>
                <td class="hac print_qr"><a title="''')
            if False:
                _('Печатать QR-код')
            _v = VFFSL(SL,"_",False)('Печатать QR-код') # "$_('\xcf\xe5\xf7\xe0\xf2\xe0\xf2\xfc QR-\xea\xee\xe4')" on line 25, col 52
            if _v is not None: write(_filter(_v, rawExpr="$_('\xcf\xe5\xf7\xe0\xf2\xe0\xf2\xfc QR-\xea\xee\xe4')")) # from line 25, col 52.
            write('''" href="javascript:void(0);"><img style="background-color: transparent" border=0 src="''')
            _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 25, col 159
            if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 25, col 159.
            write('''/actions/qr.png" /></a></td>
            </tr>
''')
        write('''    </tbody>
  </table>
</div>
<div class="buttons save footer_btns right_aligned_btns">
      <button type="button" id="dlglistBC_gen_btn"><img src="/ENGINE/images/actions/key_go.png" alt=""/>&nbsp;''')
        if False:
            _('Генерировать код доступа')
        _v = VFFSL(SL,"_",False)('Генерировать код доступа') # "$_('\xc3\xe5\xed\xe5\xf0\xe8\xf0\xee\xe2\xe0\xf2\xfc \xea\xee\xe4 \xe4\xee\xf1\xf2\xf3\xef\xe0')" on line 32, col 111
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc3\xe5\xed\xe5\xf0\xe8\xf0\xee\xe2\xe0\xf2\xfc \xea\xee\xe4 \xe4\xee\xf1\xf2\xf3\xef\xe0')")) # from line 32, col 111.
        write('''</button>&nbsp;
      <button type="button" id="dlglistBC_close_btn"><img src="/ENGINE/images/actions/accept.png" alt=""/>&nbsp;''')
        if False:
            _('Закрыть')
        _v = VFFSL(SL,"_",False)('Закрыть') # "$_('\xc7\xe0\xea\xf0\xfb\xf2\xfc')" on line 33, col 113
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc7\xe0\xea\xf0\xfb\xf2\xfc')")) # from line 33, col 113.
        write('''</button>&nbsp;
</div>

''')
        # Dialog OK/Cancel
        write('''<div id="dlgokcancel" class="dialog flora" align="center"></div>
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_admin_users_bc= 'respond'

## END CLASS DEFINITION

if not hasattr(admin_users_bc, '_initCheetahAttributes'):
    templateAPIClass = getattr(admin_users_bc, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(admin_users_bc)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=admin_users_bc()).run()


