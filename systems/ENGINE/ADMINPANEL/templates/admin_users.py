#!/usr/bin/env python
# -*- coding: cp1251 -*-



##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
from admin_main import admin_main

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.0rc8'
__CHEETAH_versionTuple__ = (2, 0, 0, 'candidate', 8)
__CHEETAH_genTime__ = 1482336166.506
__CHEETAH_genTimestamp__ = 'Wed Dec 21 18:02:46 2016'
__CHEETAH_src__ = 'systems\\ENGINE\\ADMINPANEL\\templates\\admin_users.tmpl'
__CHEETAH_srcLastModified__ = 'Wed Dec 21 09:10:13 2016'
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class admin_users(admin_main):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        admin_main.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def adminData(self, **KWS):



        ## CHEETAH: generated from #def adminData at line 3, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''
''')
        # Table of users
        write('''    <span style="font: bold 14pt sans-serif; color: gray">\xd3\xef\xf0\xe0\xe2\xeb\xe5\xed\xe8\xe5 \xef\xee\xeb\xfc\xe7\xee\xe2\xe0\xf2\xe5\xeb\xff\xec\xe8</span>
        <table id="tbl_users" style="border: 2px ridge #FFE4E1; border-spacing: 2px">
            <thead>
''')
        # <tr><td colspan=12 align="left">
        #    <span class="buttons" style="text-align: left">
        #        <button class="user_add_btn" type="button" onclick="javascript:void(0);"><img src="$eng_img/actions/add.png" style="vertical-align: middle" />&nbsp;Добавить пользователя</button>
        #    </span>
        #    ##<!--button class="buttons" style="background-color: transparent" type="button" onclick="javascript: addUser();"><img src="$eng_img/actions/add.png" style="vertical-align: middle">&nbsp;Добавить пользователя</button-->
        #    ##<!--a title="Добавить пользователя" href="javascript: addUser();"><img src="$eng_img/actions/add.png"></a-->
        #  </td></tr>
        write('''              <tr>
                <th></th>
                <th></th>
                <th></th>
                <th>ID</th>
                <th>\xcb\xee\xe3\xe8\xed</th>
                <th>\xd4\xc8\xce</th>
                <th>\xd0\xee\xeb\xe8</th>
                <th>\xcf\xe0\xf0\xee\xeb\xfc</th>
                <th>E-MAIL</th>
                <th>\xd2\xe5\xeb\xe5\xf4\xee\xed</th>
                <th>\xc8\xe7\xec\xe5\xed\xb8\xed</th>
                <th>\xca\xee\xec\xec\xe5\xed\xf2\xe0\xf0\xe8\xe9</th>
              </tr>
            </thead>
            <tbody id="tbl_users_tbody">
''')
        for user in VFFSL(SL,"datalist",True): # generated from line 32, col 13
            write('''            <tr id="''')
            _v = VFFSL(SL,"user.ID_USER",True) # '${user.ID_USER}' on line 33, col 21
            if _v is not None: write(_filter(_v, rawExpr='${user.ID_USER}')) # from line 33, col 21.
            write('''">
               <td class="hac edit_user"><a title="\xd0\xe5\xe4\xe0\xea\xf2\xe8\xf0\xee\xe2\xe0\xf2\xfc \xef\xee\xeb\xfc\xe7\xee\xe2\xe0\xf2\xe5\xeb\xff" href="javascript:void(0);"><img style="background-color: transparent" border=0 src="''')
            _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 34, col 164
            if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 34, col 164.
            write('''/actions/edit.png" /></a></td>
               <td class="hac rights_user"><a title="\xcf\xf0\xe0\xe2\xe0 \xef\xee\xeb\xfc\xe7\xee\xe2\xe0\xf2\xe5\xeb\xff" href="javascript:void(0);"><img style="background-color: transparent" border=0 src="''')
            _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 35, col 158
            if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 35, col 158.
            write('''/actions/rights.gif" /></a></td>
               <td class="hac delete_user"><a title="\xd3\xe4\xe0\xeb\xe8\xf2\xfc \xef\xee\xeb\xfc\xe7\xee\xe2\xe0\xf2\xe5\xeb\xff" href="javascript:void(0);"><img style="background-color: transparent" border=0 src="''')
            _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 36, col 160
            if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 36, col 160.
            write('''/actions/delete.png" /></a></td>
               <td id="id_''')
            _v = VFFSL(SL,"user.ID_USER",True) # '${user.ID_USER}' on line 37, col 27
            if _v is not None: write(_filter(_v, rawExpr='${user.ID_USER}')) # from line 37, col 27.
            write('''" class="har">''')
            _v = VFFSL(SL,"user.ID_USER",True) # '$user.ID_USER' on line 37, col 56
            if _v is not None: write(_filter(_v, rawExpr='$user.ID_USER')) # from line 37, col 56.
            write('''</td>
               <td id="login_''')
            _v = VFFSL(SL,"user.ID_USER",True) # '${user.ID_USER}' on line 38, col 30
            if _v is not None: write(_filter(_v, rawExpr='${user.ID_USER}')) # from line 38, col 30.
            write('''">''')
            _v = VFFSL(SL,"user.LOGIN",True) # '$user.LOGIN' on line 38, col 47
            if _v is not None: write(_filter(_v, rawExpr='$user.LOGIN')) # from line 38, col 47.
            write('''</td>
               <td id="fio_''')
            _v = VFFSL(SL,"user.ID_USER",True) # '${user.ID_USER}' on line 39, col 28
            if _v is not None: write(_filter(_v, rawExpr='${user.ID_USER}')) # from line 39, col 28.
            write('''">''')
            _v = VFFSL(SL,"user.FIO",True) # '$user.FIO' on line 39, col 45
            if _v is not None: write(_filter(_v, rawExpr='$user.FIO')) # from line 39, col 45.
            write('''</td>
''')
            if VFFSL(SL,"user.CNT_ROLES",True) == 0: # generated from line 40, col 16
                roles_title = "Кликните, чтобы назначить"
            else: # generated from line 42, col 16
                roles_title = "Роли пользователя: " + VFFSL(SL,"user.LIST_ROLES",True)
            write('''               <td id="role_''')
            _v = VFFSL(SL,"user.ID_USER",True) # '${user.ID_USER}' on line 45, col 29
            if _v is not None: write(_filter(_v, rawExpr='${user.ID_USER}')) # from line 45, col 29.
            write('''" class="hac user_roles"><a title="''')
            _v = VFFSL(SL,"roles_title",True) # '$roles_title' on line 45, col 79
            if _v is not None: write(_filter(_v, rawExpr='$roles_title')) # from line 45, col 79.
            write('''" href="javascript:void(0);">''')
            _v = VFFSL(SL,"user.CNT_ROLES",True) # '${user.CNT_ROLES}' on line 45, col 120
            if _v is not None: write(_filter(_v, rawExpr='${user.CNT_ROLES}')) # from line 45, col 120.
            write('''</a></td>
               <td class="hac reset_passwd">
''')
            # 
            #                #if $user.passwd
            #                  #set $checked='checked'
            #                #else
            #                  #set $checked='disabled'
            #                #end if
            #                ##<label class="prettyCheckbox checkbox" for="passwd_${user.ID_USER}"></label>
            #                <input id="passwd_${user.ID_USER}" type='checkbox' $checked>
            #                
            write('''               <input id="passwd_''')
            _v = VFFSL(SL,"user.ID_USER",True) # '${user.ID_USER}' on line 56, col 34
            if _v is not None: write(_filter(_v, rawExpr='${user.ID_USER}')) # from line 56, col 34.
            write('''" type="button" value="...">
               </td>
               <td id="email_''')
            _v = VFFSL(SL,"user.ID_USER",True) # '${user.ID_USER}' on line 58, col 30
            if _v is not None: write(_filter(_v, rawExpr='${user.ID_USER}')) # from line 58, col 30.
            write('''">''')
            _v = VFFSL(SL,"user.EMAIL",True) # '$user.EMAIL' on line 58, col 47
            if _v is not None: write(_filter(_v, rawExpr='$user.EMAIL')) # from line 58, col 47.
            write('''</td>
               <td id="phonenumber_''')
            _v = VFFSL(SL,"user.ID_USER",True) # '${user.ID_USER}' on line 59, col 36
            if _v is not None: write(_filter(_v, rawExpr='${user.ID_USER}')) # from line 59, col 36.
            write('''">''')
            _v = VFFSL(SL,"user.PHONENUMBER",True) # '$user.PHONENUMBER' on line 59, col 53
            if _v is not None: write(_filter(_v, rawExpr='$user.PHONENUMBER')) # from line 59, col 53.
            write('''</td>
               <td id="lastdate_''')
            _v = VFFSL(SL,"user.ID_USER",True) # '${user.ID_USER}' on line 60, col 33
            if _v is not None: write(_filter(_v, rawExpr='${user.ID_USER}')) # from line 60, col 33.
            write('''">''')
            _orig_filter_34178688 = _filter
            filterName = 'DateTimeWSecFilter'
            if self._CHEETAH__filters.has_key("DateTimeWSecFilter"):
                _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
            else:
                _filter = self._CHEETAH__currentFilter = \
			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
            _v = VFFSL(SL,"user.LASTDATE",True) # '$user.LASTDATE' on line 60, col 77
            if _v is not None: write(_filter(_v, rawExpr='$user.LASTDATE')) # from line 60, col 77.
            write(''' ''')
            _filter = _orig_filter_34178688
            write('''
               <td id="comments_''')
            _v = VFFSL(SL,"user.ID_USER",True) # '${user.ID_USER}' on line 61, col 33
            if _v is not None: write(_filter(_v, rawExpr='${user.ID_USER}')) # from line 61, col 33.
            write('''">''')
            _v = VFFSL(SL,"user.COMMENTS",True) # '$user.COMMENTS' on line 61, col 50
            if _v is not None: write(_filter(_v, rawExpr='$user.COMMENTS')) # from line 61, col 50.
            write('''</td>
            </tr>
''')
        write('''            </tbody>
            <tfoot>
              <tr><td colspan=12>&nbsp;</td></tr>
              <tr><td colspan=12 align="left">
                  <div class="buttons" style="text-align: left">
                      <button class="user_add_btn" type="button" onclick="javascript: void(0);"><img src="''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 69, col 107
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 69, col 107.
        write('''/actions/add.png" style="vertical-align: middle">&nbsp;\xc4\xee\xe1\xe0\xe2\xe8\xf2\xfc \xef\xee\xeb\xfc\xe7\xee\xe2\xe0\xf2\xe5\xeb\xff</button>
''')
        # <!--button class="buttons" style="background-color: transparent" type="button" onclick="javascript: addUser();"><img src="$eng_img/actions/add.png" style="vertical-align: middle">&nbsp;Добавить пользователя</button-->
        # <!--a title="Добавить пользователя" href="javascript: addUser();"><img src="$eng_img/actions/add.png"></a-->
        write('''                      <span>
''')
        if VFFSL(SL,"varExists",False)('$layers') and VFFSL(SL,"layers",True): # generated from line 73, col 27
            write('''                              <label id=\'lbl_filter_cmb\' for="filter_cmb">''')
            if False:
                _('Фильтр')
            _v = VFFSL(SL,"_",False)('Фильтр') # "$_('\xd4\xe8\xeb\xfc\xf2\xf0')" on line 74, col 75
            if _v is not None: write(_filter(_v, rawExpr="$_('\xd4\xe8\xeb\xfc\xf2\xf0')")) # from line 74, col 75.
            write("""</label><select id='filter_cmb'>
                                  <option value='-2'>\xd1\xd3\xcf\xc5\xd0\xc0\xc4\xcc\xc8\xcd\xc8\xd1\xd2\xd0\xc0\xd2\xce\xd0\xdb</option>
""")
            for layer in VFFSL(SL,"layers",True): # generated from line 76, col 35
                if str(VFFSL(SL,"layer_id",True)) == str(VFFSL(SL,"layer.LAYER_ID",True)): # generated from line 77, col 39
                    selected = ' selected = "selected" '
                else: # generated from line 79, col 39
                    selected = ' '
                write('''                                      <option ''')
                _v = VFFSL(SL,"selected",True) # '$selected' on line 82, col 47
                if _v is not None: write(_filter(_v, rawExpr='$selected')) # from line 82, col 47.
                write(""" value='""")
                _v = VFFSL(SL,"layer.LAYER_ID",True) # '$layer.LAYER_ID' on line 82, col 64
                if _v is not None: write(_filter(_v, rawExpr='$layer.LAYER_ID')) # from line 82, col 64.
                write("""'>""")
                _v = VFFSL(SL,"layer.ORGANIZATION",True) # '$layer.ORGANIZATION' on line 82, col 81
                if _v is not None: write(_filter(_v, rawExpr='$layer.ORGANIZATION')) # from line 82, col 81.
                write(''' (''')
                _v = VFFSL(SL,"layer.LAYER_ID",True) # '$layer.LAYER_ID' on line 82, col 102
                if _v is not None: write(_filter(_v, rawExpr='$layer.LAYER_ID')) # from line 82, col 102.
                write(''')</option>
''')
            write('''                              </select>
''')
        write('''                      <span>
                  </div>
              </td></tr>
            </tfoot>
        </table>

''')
        # Style
        write('''<link rel="stylesheet" href="''')
        _v = VFFSL(SL,"sp_css",True) # '$sp_css' on line 93, col 30
        if _v is not None: write(_filter(_v, rawExpr='$sp_css')) # from line 93, col 30.
        write('''/admin_users.css" type="text/css"/>

''')
        # Dialog Add/Edit User
        write('''<div id="dlgedit" class="dialog flora" title="\xc8\xe7\xec\xe5\xed\xe5\xed\xe8\xe5 \xef\xe0\xf0\xe0\xec\xe5\xf2\xf0\xee\xe2 \xef\xee\xeb\xfc\xe7\xee\xe2\xe0\xf2\xe5\xeb\xff" align="center"></div>

''')
        # Dialog User Rights
        write('''<div id="dlgrights" class="dialog flora" title="\xcf\xf0\xe0\xe2\xe0 \xef\xee\xeb\xfc\xe7\xee\xe2\xe0\xf2\xe5\xeb\xff" align="center"></div>
<div id="dlgurrights" class="dialog flora" title="\xcd\xe0\xe7\xed\xe0\xf7\xe5\xed\xed\xfb\xe5 \xf0\xee\xeb\xe8" align="center"></div>

''')
        # Dialog Изменение пароля
        write('''<div id="dlgchangepasswd" class="dialog flora" title="\xc8\xe7\xec\xe5\xed\xe5\xed\xe8\xe5 \xef\xe0\xf0\xee\xeb\xff" align="center"></div>

''')
        # Scripts
        write('''<script type="text/javascript" src="''')
        _v = VFFSL(SL,"sp_js",True) # '$sp_js' on line 106, col 37
        if _v is not None: write(_filter(_v, rawExpr='$sp_js')) # from line 106, col 37.
        write('''/admin_roles.js"></script>
<script type="text/javascript" src="''')
        _v = VFFSL(SL,"sp_js",True) # '$sp_js' on line 107, col 37
        if _v is not None: write(_filter(_v, rawExpr='$sp_js')) # from line 107, col 37.
        write('''/admin_users.js"></script>
<script type="text/javascript">
''')
        if VFFSL(SL,"varExists",False)('$focused_id'): # generated from line 109, col 1
            if VFFSL(SL,"focused_id",True)!='': # generated from line 110, col 3
                write('''    focused_id=''')
                _v = VFFSL(SL,"focused_id",True) # '$focused_id' on line 111, col 16
                if _v is not None: write(_filter(_v, rawExpr='$focused_id')) # from line 111, col 16.
                write('''
''')
        write('''
</script>
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def writeBody(self, **KWS):



        ## CHEETAH: main method generated for this template
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_admin_users= 'writeBody'

## END CLASS DEFINITION

if not hasattr(admin_users, '_initCheetahAttributes'):
    templateAPIClass = getattr(admin_users, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(admin_users)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=admin_users()).run()


