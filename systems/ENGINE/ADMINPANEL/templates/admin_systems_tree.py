#!/usr/bin/env python
# -*- coding: cp1251 -*-



##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.0rc8'
__CHEETAH_versionTuple__ = (2, 0, 0, 'candidate', 8)
__CHEETAH_genTime__ = 1482336166.3280001
__CHEETAH_genTimestamp__ = 'Wed Dec 21 18:02:46 2016'
__CHEETAH_src__ = 'systems\\ENGINE\\ADMINPANEL\\templates\\admin_systems_tree.tmpl'
__CHEETAH_srcLastModified__ = 'Wed Dec 21 09:10:12 2016'
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class admin_systems_tree(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        Template.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''<ul style="text-align: left" id="tree_systems_tree" class="treeview">
    ''')
        _v = VFFSL(SL,"tree",True) # '$tree' on line 3, col 5
        if _v is not None: write(_filter(_v, rawExpr='$tree')) # from line 3, col 5.
        write('''
</ul>

<div id="tree_buttons " class="buttons">
    <div id="treecontrol" style="float: left">
        <a href="#" style="float: left">''')
        if False:
            _('Свернуть всё')
        _v = VFFSL(SL,"_",False)('Свернуть всё') # "$_('\xd1\xe2\xe5\xf0\xed\xf3\xf2\xfc \xe2\xf1\xb8')" on line 8, col 41
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd1\xe2\xe5\xf0\xed\xf3\xf2\xfc \xe2\xf1\xb8')")) # from line 8, col 41.
        write('''</a>
        <span style="float: left">&nbsp;&nbsp;</span>
        <a href="#" style="float: left">''')
        if False:
            _('Развернуть всё')
        _v = VFFSL(SL,"_",False)('Развернуть всё') # "$_('\xd0\xe0\xe7\xe2\xe5\xf0\xed\xf3\xf2\xfc \xe2\xf1\xb8')" on line 10, col 41
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd0\xe0\xe7\xe2\xe5\xf0\xed\xf3\xf2\xfc \xe2\xf1\xb8')")) # from line 10, col 41.
        write('''</a>
    </div>
    <div class="buttons save footer_btns">
        <button type="button" id="save_btn" style="background-color:#CCC"><img src="''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 13, col 85
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 13, col 85.
        write('''/actions/accept.png" alt=""/>&nbsp;''')
        if False:
            _('Сохранить')
        _v = VFFSL(SL,"_",False)('Сохранить') # "$_('\xd1\xee\xf5\xf0\xe0\xed\xe8\xf2\xfc')" on line 13, col 128
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd1\xee\xf5\xf0\xe0\xed\xe8\xf2\xfc')")) # from line 13, col 128.
        write('''</button>&nbsp;
        <button type="button" id="cancel_btn"><img src="''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 14, col 57
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 14, col 57.
        write('''/actions/cancel.png" alt=""/>&nbsp;''')
        if False:
            _('Отмена')
        _v = VFFSL(SL,"_",False)('Отмена') # "$_('\xce\xf2\xec\xe5\xed\xe0')" on line 14, col 100
        if _v is not None: write(_filter(_v, rawExpr="$_('\xce\xf2\xec\xe5\xed\xe0')")) # from line 14, col 100.
        write('''</button>
        <button type="button" id="exit_to_systems_btn"><img src="''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 15, col 66
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 15, col 66.
        write('''/actions/exit.png" alt=""/>&nbsp;''')
        if False:
            _('Закрыть')
        _v = VFFSL(SL,"_",False)('Закрыть') # "$_('\xc7\xe0\xea\xf0\xfb\xf2\xfc')" on line 15, col 107
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc7\xe0\xea\xf0\xfb\xf2\xfc')")) # from line 15, col 107.
        write('''</button>
    </div>
</div>

<ul style="display: none; width: 200px" id="menuTree" class="contextMenu">
    <li class="add">
        <a href="#addUser">''')
        if False:
            _('Выбрать пользователей')
        _v = VFFSL(SL,"_",False)('Выбрать пользователей') # "$_('\xc2\xfb\xe1\xf0\xe0\xf2\xfc \xef\xee\xeb\xfc\xe7\xee\xe2\xe0\xf2\xe5\xeb\xe5\xe9')" on line 21, col 28
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc2\xfb\xe1\xf0\xe0\xf2\xfc \xef\xee\xeb\xfc\xe7\xee\xe2\xe0\xf2\xe5\xeb\xe5\xe9')")) # from line 21, col 28.
        write('''</a>
    </li>
</ul>

<ul style="display: none; width: 300px" id="menuUser" class="contextMenu">
    <li class="add">
        <a href="#addUser">''')
        if False:
            _('Выбрать пользователей')
        _v = VFFSL(SL,"_",False)('Выбрать пользователей') # "$_('\xc2\xfb\xe1\xf0\xe0\xf2\xfc \xef\xee\xeb\xfc\xe7\xee\xe2\xe0\xf2\xe5\xeb\xe5\xe9')" on line 27, col 28
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc2\xfb\xe1\xf0\xe0\xf2\xfc \xef\xee\xeb\xfc\xe7\xee\xe2\xe0\xf2\xe5\xeb\xe5\xe9')")) # from line 27, col 28.
        write('''</a>
    </li>
    <li class="addchild">
        <a href="#addOpt">''')
        if False:
            _('Добавить опцию')
        _v = VFFSL(SL,"_",False)('Добавить опцию') # "$_('\xc4\xee\xe1\xe0\xe2\xe8\xf2\xfc \xee\xef\xf6\xe8\xfe')" on line 30, col 27
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc4\xee\xe1\xe0\xe2\xe8\xf2\xfc \xee\xef\xf6\xe8\xfe')")) # from line 30, col 27.
        write('''</a>
    </li>
    <li class="delete separator">
        <a href="#delUserOpts">''')
        if False:
            _('Удалить все опции пользователя')
        _v = VFFSL(SL,"_",False)('Удалить все опции пользователя') # "$_('\xd3\xe4\xe0\xeb\xe8\xf2\xfc \xe2\xf1\xe5 \xee\xef\xf6\xe8\xe8 \xef\xee\xeb\xfc\xe7\xee\xe2\xe0\xf2\xe5\xeb\xff')" on line 33, col 32
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd3\xe4\xe0\xeb\xe8\xf2\xfc \xe2\xf1\xe5 \xee\xef\xf6\xe8\xe8 \xef\xee\xeb\xfc\xe7\xee\xe2\xe0\xf2\xe5\xeb\xff')")) # from line 33, col 32.
        write('''</a>
    </li>
    <!--li class="delete">
        <a href="#delSelectedOpts">\xd3\xe4\xe0\xeb\xe8\xf2\xfc \xe2\xfb\xe1\xf0\xe0\xed\xed\xfb\xe5 \xee\xef\xf6\xe8\xe8</a>
    </li-->
</ul>

<ul style="display: none; width: 300px" id="menuType" class="contextMenu">
    <li class="addchild">
        <a href="#addOpt">''')
        if False:
            _('Добавить опцию')
        _v = VFFSL(SL,"_",False)('Добавить опцию') # "$_('\xc4\xee\xe1\xe0\xe2\xe8\xf2\xfc \xee\xef\xf6\xe8\xfe')" on line 42, col 27
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc4\xee\xe1\xe0\xe2\xe8\xf2\xfc \xee\xef\xf6\xe8\xfe')")) # from line 42, col 27.
        write('''</a>
    </li>
    <li class="delete separator">
        <a href="#delType">''')
        if False:
            _('Удалить тип, все его объекты и опции')
        _v = VFFSL(SL,"_",False)('Удалить тип, все его объекты и опции') # "$_('\xd3\xe4\xe0\xeb\xe8\xf2\xfc \xf2\xe8\xef, \xe2\xf1\xe5 \xe5\xe3\xee \xee\xe1\xfa\xe5\xea\xf2\xfb \xe8 \xee\xef\xf6\xe8\xe8')" on line 45, col 28
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd3\xe4\xe0\xeb\xe8\xf2\xfc \xf2\xe8\xef, \xe2\xf1\xe5 \xe5\xe3\xee \xee\xe1\xfa\xe5\xea\xf2\xfb \xe8 \xee\xef\xf6\xe8\xe8')")) # from line 45, col 28.
        write('''</a>
    </li>
</ul>

<ul style="display: none; width: 300px" id="menuObj" class="contextMenu">
    <li class="addchild">
        <a href="#addOpt">''')
        if False:
            _('Добавить опцию')
        _v = VFFSL(SL,"_",False)('Добавить опцию') # "$_('\xc4\xee\xe1\xe0\xe2\xe8\xf2\xfc \xee\xef\xf6\xe8\xfe')" on line 51, col 27
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc4\xee\xe1\xe0\xe2\xe8\xf2\xfc \xee\xef\xf6\xe8\xfe')")) # from line 51, col 27.
        write('''</a>
    </li>
    <li class="delete separator">
        <a href="#delObj">''')
        if False:
            _('Удалить объект и все его опции')
        _v = VFFSL(SL,"_",False)('Удалить объект и все его опции') # "$_('\xd3\xe4\xe0\xeb\xe8\xf2\xfc \xee\xe1\xfa\xe5\xea\xf2 \xe8 \xe2\xf1\xe5 \xe5\xe3\xee \xee\xef\xf6\xe8\xe8')" on line 54, col 27
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd3\xe4\xe0\xeb\xe8\xf2\xfc \xee\xe1\xfa\xe5\xea\xf2 \xe8 \xe2\xf1\xe5 \xe5\xe3\xee \xee\xef\xf6\xe8\xe8')")) # from line 54, col 27.
        write('''</a>
    </li>
</ul>

<ul style="display: none; width: 200px" id="menuOpt" class="contextMenu">
    <li class="add">
        <a href="#addOpt">''')
        if False:
            _('Добавить опцию')
        _v = VFFSL(SL,"_",False)('Добавить опцию') # "$_('\xc4\xee\xe1\xe0\xe2\xe8\xf2\xfc \xee\xef\xf6\xe8\xfe')" on line 60, col 27
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc4\xee\xe1\xe0\xe2\xe8\xf2\xfc \xee\xef\xf6\xe8\xfe')")) # from line 60, col 27.
        write('''</a>
    </li>
    <li class="edit">
        <a href="#editOpt">''')
        if False:
            _('Изменить опцию')
        _v = VFFSL(SL,"_",False)('Изменить опцию') # "$_('\xc8\xe7\xec\xe5\xed\xe8\xf2\xfc \xee\xef\xf6\xe8\xfe')" on line 63, col 28
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc8\xe7\xec\xe5\xed\xe8\xf2\xfc \xee\xef\xf6\xe8\xfe')")) # from line 63, col 28.
        write('''</a>
    </li>
    <li class="delete">
        <a href="#delOpt">''')
        if False:
            _('Удалить опцию')
        _v = VFFSL(SL,"_",False)('Удалить опцию') # "$_('\xd3\xe4\xe0\xeb\xe8\xf2\xfc \xee\xef\xf6\xe8\xfe')" on line 66, col 27
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd3\xe4\xe0\xeb\xe8\xf2\xfc \xee\xef\xf6\xe8\xfe')")) # from line 66, col 27.
        write('''</a>
    </li>
</ul>

''')
        # Dialog Add/Edit Option
        write('''<div id="dlgoptedit" class="dialog flora" align="center"></div>
''')
        # Dialog OK/Cancel
        write('''<div id="dlgokcancel" class="dialog flora" align="center"></div>

''')
        # Scripts
        write('''<script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 76, col 37
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 76, col 37.
        write('''/jquery.contextMenu.min.js"></script>
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_admin_systems_tree= 'respond'

## END CLASS DEFINITION

if not hasattr(admin_systems_tree, '_initCheetahAttributes'):
    templateAPIClass = getattr(admin_systems_tree, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(admin_systems_tree)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=admin_systems_tree()).run()


