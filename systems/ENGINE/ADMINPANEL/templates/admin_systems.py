#!/usr/bin/env python
# -*- coding: cp1251 -*-



##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
from admin_main import admin_main

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.0rc8'
__CHEETAH_versionTuple__ = (2, 0, 0, 'candidate', 8)
__CHEETAH_genTime__ = 1482336166.194
__CHEETAH_genTimestamp__ = 'Wed Dec 21 18:02:46 2016'
__CHEETAH_src__ = 'systems\\ENGINE\\ADMINPANEL\\templates\\admin_systems.tmpl'
__CHEETAH_srcLastModified__ = 'Wed Dec 21 09:10:12 2016'
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class admin_systems(admin_main):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        admin_main.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def adminData(self, **KWS):



        ## CHEETAH: generated from #def adminData at line 3, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write("""    <link rel='stylesheet' href='""")
        _v = VFFSL(SL,"sp_css",True) # '$sp_css' on line 4, col 34
        if _v is not None: write(_filter(_v, rawExpr='$sp_css')) # from line 4, col 34.
        write('''/admin_systems.css\' type=\'text/css\' />

    <script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 6, col 41
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 6, col 41.
        write('''/k.UpDown.js"></script>

    <h2 id="submenu_title" style="font: bold 14pt sans-serif; color: gray">''')
        if False:
            _('Управление системами')
        _v = VFFSL(SL,"_",False)('Управление системами') # "$_('\xd3\xef\xf0\xe0\xe2\xeb\xe5\xed\xe8\xe5 \xf1\xe8\xf1\xf2\xe5\xec\xe0\xec\xe8')" on line 8, col 76
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd3\xef\xf0\xe0\xe2\xeb\xe5\xed\xe8\xe5 \xf1\xe8\xf1\xf2\xe5\xec\xe0\xec\xe8')")) # from line 8, col 76.
        write('''</h2>
    <h3 id="step_title" style="display: none; font: bold 12pt sans-serif; color: gray"></h3>
    <div id="step_content">
    </div>
    <div id="step_descript" style="display: none; font: 9pt sans-serif; color: gray"></div>
    <div id="step_buttons" class="buttons" style="display: none; text-align: center">
        <button id="prev_btn" type="button"><img src="''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 14, col 55
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 14, col 55.
        write('''/arrows/arrow_left.png" style="vertical-align: middle" />&nbsp;''')
        if False:
            _('К системам')
        _v = VFFSL(SL,"_",False)('К системам') # "$_('\xca \xf1\xe8\xf1\xf2\xe5\xec\xe0\xec')" on line 14, col 126
        if _v is not None: write(_filter(_v, rawExpr="$_('\xca \xf1\xe8\xf1\xf2\xe5\xec\xe0\xec')")) # from line 14, col 126.
        write('''</button>
        <button id="next_btn" type="button"><img src="''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 15, col 55
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 15, col 55.
        write('''/arrows/arrow_right.png" style="vertical-align: middle" />&nbsp;''')
        if False:
            _('К опциям')
        _v = VFFSL(SL,"_",False)('К опциям') # "$_('\xca \xee\xef\xf6\xe8\xff\xec')" on line 15, col 127
        if _v is not None: write(_filter(_v, rawExpr="$_('\xca \xee\xef\xf6\xe8\xff\xec')")) # from line 15, col 127.
        write('''</button>
        &nbsp;&nbsp;<button id="exit_btn" type="button"><img src="''')
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 16, col 67
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 16, col 67.
        write('''/actions/exit.png" style="vertical-align: middle" />&nbsp;''')
        if False:
            _('Выход')
        _v = VFFSL(SL,"_",False)('Выход') # "$_('\xc2\xfb\xf5\xee\xe4')" on line 16, col 133
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc2\xfb\xf5\xee\xe4')")) # from line 16, col 133.
        write("""</button>&nbsp;
    </div>

    <ul id='tblCnMenu' class='contextMenu'>
        <li class='add'><a href='#add_sys'>""")
        if False:
            _('Добавить')
        _v = VFFSL(SL,"_",False)('Добавить') # "$_('\xc4\xee\xe1\xe0\xe2\xe8\xf2\xfc')" on line 20, col 45
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc4\xee\xe1\xe0\xe2\xe8\xf2\xfc')")) # from line 20, col 45.
        write("""</a></li>
        <li class='edit'><a href='#edit_sys'>""")
        if False:
            _('Редактировать')
        _v = VFFSL(SL,"_",False)('Редактировать') # "$_('\xd0\xe5\xe4\xe0\xea\xf2\xe8\xf0\xee\xe2\xe0\xf2\xfc')" on line 21, col 47
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd0\xe5\xe4\xe0\xea\xf2\xe8\xf0\xee\xe2\xe0\xf2\xfc')")) # from line 21, col 47.
        write("""</a></li>
        <li class='delete'><a href='#delete_sys'>""")
        if False:
            _('Удалить')
        _v = VFFSL(SL,"_",False)('Удалить') # "$_('\xd3\xe4\xe0\xeb\xe8\xf2\xfc')" on line 22, col 51
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd3\xe4\xe0\xeb\xe8\xf2\xfc')")) # from line 22, col 51.
        write("""</a></li>
    </ul>

    <div id='dlg-systems' class='flora' style='display: none;'>
        <form name='sys-edit-frm' id='sys-edit-frm'>
            <table class='clear' style='width: 100%'>
                <tbody>
                    <tr>
                        <th width='20%'>""")
        if False:
            _('Имя')
        _v = VFFSL(SL,"_",False)('Имя') # "$_('\xc8\xec\xff')" on line 30, col 41
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc8\xec\xff')")) # from line 30, col 41.
        write(""":</th><td width='30%'><input type='text' class='sysinfo' name='show_name' id='sys-edit-show_name'/></td>
                        <th width='20%'>""")
        if False:
            _('Отключена')
        _v = VFFSL(SL,"_",False)('Отключена') # "$_('\xce\xf2\xea\xeb\xfe\xf7\xe5\xed\xe0')" on line 31, col 41
        if _v is not None: write(_filter(_v, rawExpr="$_('\xce\xf2\xea\xeb\xfe\xf7\xe5\xed\xe0')")) # from line 31, col 41.
        write(""":</th><td width='30%'><input type='checkbox' name='disabled' id='sys-edit-disabled' /></td>
                    </tr>
                    <tr>
                        <th>""")
        if False:
            _('Ссылка')
        _v = VFFSL(SL,"_",False)('Ссылка') # "$_('\xd1\xf1\xfb\xeb\xea\xe0')" on line 34, col 29
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd1\xf1\xfb\xeb\xea\xe0')")) # from line 34, col 29.
        write(""":</th><td><input type='text' class='sysinfo' name='ref_name' id='sys-edit-ref_name'/></td>
                        <th>""")
        if False:
            _('Слать ошибки')
        _v = VFFSL(SL,"_",False)('Слать ошибки') # "$_('\xd1\xeb\xe0\xf2\xfc \xee\xf8\xe8\xe1\xea\xe8')" on line 35, col 29
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd1\xeb\xe0\xf2\xfc \xee\xf8\xe8\xe1\xea\xe8')")) # from line 35, col 29.
        write(""":</th><td>
                            <select name='send_bug_mail' id='sys-edit-send_bug_mail'>
                                <option value='1'>""")
        if False:
            _('Да')
        _v = VFFSL(SL,"_",False)('Да') # "$_('\xc4\xe0')" on line 37, col 51
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc4\xe0')")) # from line 37, col 51.
        write("""</option>
                                <option value='0'>""")
        if False:
            _('Нет')
        _v = VFFSL(SL,"_",False)('Нет') # "$_('\xcd\xe5\xf2')" on line 38, col 51
        if _v is not None: write(_filter(_v, rawExpr="$_('\xcd\xe5\xf2')")) # from line 38, col 51.
        write('''</option>
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <th>''')
        if False:
            _('Папка')
        _v = VFFSL(SL,"_",False)('Папка') # "$_('\xcf\xe0\xef\xea\xe0')" on line 43, col 29
        if _v is not None: write(_filter(_v, rawExpr="$_('\xcf\xe0\xef\xea\xe0')")) # from line 43, col 29.
        write(""":</th><td><input type='text' class='sysinfo' name='folder_name' id='sys-edit-folder_name' /></td>
                        <th>""")
        if False:
            _('Email')
        _v = VFFSL(SL,"_",False)('Email') # "$_('Email')" on line 44, col 29
        if _v is not None: write(_filter(_v, rawExpr="$_('Email')")) # from line 44, col 29.
        write(""":</th><td><select name='id_mail' id='sys-edit-id_mail'><optgroup label='\xc2\xfb\xe1\xe5\xf0\xe8\xf2\xe5 email'></optgroup></select></td>
                    </tr>
                    <tr>
                        <th>""")
        if False:
            _('Класс')
        _v = VFFSL(SL,"_",False)('Класс') # "$_('\xca\xeb\xe0\xf1\xf1')" on line 47, col 29
        if _v is not None: write(_filter(_v, rawExpr="$_('\xca\xeb\xe0\xf1\xf1')")) # from line 47, col 29.
        write(""":</th><td><input type='text' class='sysinfo' name='class_name' id='sys-edit-class_name' /></td>
                        <th>""")
        if False:
            _('Формат Д/В')
        _v = VFFSL(SL,"_",False)('Формат Д/В') # "$_('\xd4\xee\xf0\xec\xe0\xf2 \xc4/\xc2')" on line 48, col 29
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd4\xee\xf0\xec\xe0\xf2 \xc4/\xc2')")) # from line 48, col 29.
        write(''':</th><td>
                            <span class=\'relative\'>
                                <input type=\'text\' class=\'sysinfo\' name=\'date_time_format\' id=\'sys-edit-date_time_format\' />
                                <button class="defaultbtn datetime buttons" type=\'button\' title="\xcf\xee\xe4\xf1\xf2\xe0\xe2\xe8\xf2\xfc \xe7\xed\xe0\xf7\xe5\xed\xe8\xe5 \xef\xee \xf3\xec\xee\xeb\xf7\xe0\xed\xe8\xfe">def</button>
                            </span>
                        </td>
                    </tr>
                    <tr>
                        <th>''')
        if False:
            _('Модуль')
        _v = VFFSL(SL,"_",False)('Модуль') # "$_('\xcc\xee\xe4\xf3\xeb\xfc')" on line 56, col 29
        if _v is not None: write(_filter(_v, rawExpr="$_('\xcc\xee\xe4\xf3\xeb\xfc')")) # from line 56, col 29.
        write(""":</th><td><input type='text' class='sysinfo' name='module_name' id='sys-edit-module_name' /></td>
                        <th>""")
        if False:
            _('Формат В')
        _v = VFFSL(SL,"_",False)('Формат В') # "$_('\xd4\xee\xf0\xec\xe0\xf2 \xc2')" on line 57, col 29
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd4\xee\xf0\xec\xe0\xf2 \xc2')")) # from line 57, col 29.
        write(""":</th><td class='relative'>
                            <span class='relative'>

                                <input type='text' class='sysinfo' name='time_format' id='sys-edit-time_format' />
                                <button class='defaultbtn time buttons' type='button' title='\xcf\xee\xe4\xf1\xf2\xe0\xe2\xe8\xf2\xfc \xe7\xed\xe0\xf7\xe5\xed\xe8\xe5 \xef\xee \xf3\xec\xee\xeb\xf7\xe0\xed\xe8\xfe'>def</button>
                            </span>
                        </td>
                    </tr>
                    <tr>
                        <th>""")
        if False:
            _('База')
        _v = VFFSL(SL,"_",False)('База') # "$_('\xc1\xe0\xe7\xe0')" on line 66, col 29
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc1\xe0\xe7\xe0')")) # from line 66, col 29.
        write(""":</th><td><select name='id_base' id='sys-edit-id_base'><optgroup label='\xc1\xfb\xe1\xe5\xf0\xe8\xf2\xe5 \xe1\xe0\xe7\xf3'></optgroup></td>
                        <th>""")
        if False:
            _('HIGHER')
        _v = VFFSL(SL,"_",False)('HIGHER') # "$_('HIGHER')" on line 67, col 29
        if _v is not None: write(_filter(_v, rawExpr="$_('HIGHER')")) # from line 67, col 29.
        write(""":</th><td><select name='higher_val' id='sys-edit-higher_val'><optgroup label='\xc2\xfb\xe1\xe5\xf0\xe8\xf2\xe5 \xf0\xee\xe4\xe8\xf2\xe5\xeb\xfc\xf1\xea\xf3\xfe \xf1\xe8\xf1\xf2\xe5\xec\xf3'></optgroup></td>

                    </tr>
                </tbody>
            </table>
        </form>

        <div class='buttons'>
            <button class='btnsave buttons'><img src='""")
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 75, col 55
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 75, col 55.
        write("""/actions/save.png' />""")
        if False:
            _('Сохранить')
        _v = VFFSL(SL,"_",False)('Сохранить') # "$_('\xd1\xee\xf5\xf0\xe0\xed\xe8\xf2\xfc')" on line 75, col 84
        if _v is not None: write(_filter(_v, rawExpr="$_('\xd1\xee\xf5\xf0\xe0\xed\xe8\xf2\xfc')")) # from line 75, col 84.
        write("""</button>
            <button class='btnclose buttons'><img src='""")
        _v = VFFSL(SL,"eng_img",True) # '$eng_img' on line 76, col 56
        if _v is not None: write(_filter(_v, rawExpr='$eng_img')) # from line 76, col 56.
        write("""/actions/cancel.png' />""")
        if False:
            _('Закрыть')
        _v = VFFSL(SL,"_",False)('Закрыть') # "$_('\xc7\xe0\xea\xf0\xfb\xf2\xfc')" on line 76, col 87
        if _v is not None: write(_filter(_v, rawExpr="$_('\xc7\xe0\xea\xf0\xfb\xf2\xfc')")) # from line 76, col 87.
        write('''</button>
        </div>

    </div>

''')
        # Deleting all options box for
        write("""    <div id='options_mass_delete_dlg' class='flora' title='\xcc\xe0\xf1\xf1\xee\xe2\xee\xe5 \xf3\xe4\xe0\xeb\xe5\xed\xe8\xe5 \xee\xef\xf6\xe8\xe9' style='display: none;'></div>


""")
        # Scripts
        write('''<script type="text/javascript" src="''')
        _v = VFFSL(SL,"sp_js",True) # '$sp_js' on line 86, col 37
        if _v is not None: write(_filter(_v, rawExpr='$sp_js')) # from line 86, col 37.
        write('''/admin_systems.js"></script>
<script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 87, col 37
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 87, col 37.
        write('''/jquery.boxit.js"></script>
<script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 88, col 37
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 88, col 37.
        write('''/jqtreetable.min.js" ></script>
<script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 89, col 37
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 89, col 37.
        write('''/jquery.contextMenu.min.js" ></script>
<script type="text/javascript" src="''')
        _v = VFFSL(SL,"eng_js",True) # '$eng_js' on line 90, col 37
        if _v is not None: write(_filter(_v, rawExpr='$eng_js')) # from line 90, col 37.
        write('''/jquery.multiSelect.js"></script>



''')
        # CSS
        write('''<link rel="stylesheet" href="''')
        _v = VFFSL(SL,"eng_css",True) # '$eng_css' on line 95, col 30
        if _v is not None: write(_filter(_v, rawExpr='$eng_css')) # from line 95, col 30.
        write('''/jqtreetable.css" type="text/css" media="screen"/>
<link rel="stylesheet" href="''')
        _v = VFFSL(SL,"eng_css",True) # '$eng_css' on line 96, col 30
        if _v is not None: write(_filter(_v, rawExpr='$eng_css')) # from line 96, col 30.
        write('''/jquery.multiSelect.css" type="text/css" media="screen"/>

''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def writeBody(self, **KWS):



        ## CHEETAH: main method generated for this template
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_admin_systems= 'writeBody'

## END CLASS DEFINITION

if not hasattr(admin_systems, '_initCheetahAttributes'):
    templateAPIClass = getattr(admin_systems, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(admin_systems)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=admin_systems()).run()


