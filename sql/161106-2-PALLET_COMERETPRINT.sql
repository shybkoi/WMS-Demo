/******************************************************************************/
/***               Generated by IBExpert 05.11.2016 22:45:34                ***/
/******************************************************************************/

/******************************************************************************/
/***      Following SET SQL DIALECT is just for the Database Comparer       ***/
/******************************************************************************/
SET SQL DIALECT 3;



/******************************************************************************/
/***                                 Tables                                 ***/
/******************************************************************************/


CREATE GENERATOR G_PALLETCBARCODE;

CREATE TABLE PALLET_COMERETPRINT (
    BARCODE   R_BARCODE NOT NULL /* R_BARCODE = VARCHAR(25) */,
    MANID     R_ID NOT NULL /* R_ID = INTEGER */,
    WHID      R_ID NOT NULL /* R_ID = INTEGER */,
    ZONEID    R_ID NOT NULL /* R_ID = INTEGER */,
    DATETIME  R_DATETIME NOT NULL /* R_DATETIME = TIMESTAMP */,
    PALLETID  R_ID /* R_ID = INTEGER */,
    NUMBER    R_BARCODE NOT NULL /* R_BARCODE = VARCHAR(25) */,
    ENABLED   R_FLAG NOT NULL COLLATE PXW_CYRL /* R_FLAG = CHAR(1) */
);




/******************************************************************************/
/***                              Foreign Keys                              ***/
/******************************************************************************/

ALTER TABLE PALLET_COMERETPRINT ADD CONSTRAINT FK_PALLET_COMERETPRINT_MANID FOREIGN KEY (MANID) REFERENCES MAN (MANID);
ALTER TABLE PALLET_COMERETPRINT ADD CONSTRAINT FK_PALLET_COMERETPRINT_PALLETID FOREIGN KEY (PALLETID) REFERENCES PALLET (PALLETID);
ALTER TABLE PALLET_COMERETPRINT ADD CONSTRAINT FK_PALLET_COMERETPRINT_WHID FOREIGN KEY (WHID) REFERENCES OBJECT (OBJID);
ALTER TABLE PALLET_COMERETPRINT ADD CONSTRAINT FK_PALLET_COMERETPRINT_ZONEID FOREIGN KEY (ZONEID) REFERENCES SITEZONE (ZONEID);


/******************************************************************************/
/***                                Indices                                 ***/
/******************************************************************************/

CREATE INDEX PALLET_COMERETPRINT_IDX_BARCODE ON PALLET_COMERETPRINT (BARCODE);
CREATE INDEX PALLET_COMERETPRINT_IDX_NUMBER ON PALLET_COMERETPRINT (NUMBER);


/******************************************************************************/
/***                                Triggers                                ***/
/******************************************************************************/


SET TERM ^ ;



/******************************************************************************/
/***                          Triggers for tables                           ***/
/******************************************************************************/



/* Trigger: PALLET_COMERETPRINT_BI */
CREATE OR ALTER TRIGGER PALLET_COMERETPRINT_BI FOR PALLET_COMERETPRINT
ACTIVE BEFORE INSERT POSITION 0
as
 declare variable flag       type of r_flag;
 declare variable palnumber bigint;
 declare variable palletunitid type of r_double;
 declare variable GUBTDAYS type of r_double;

 declare variable generatorname type of r_dbname;
 declare variable mingenid type of column PALLET_TYPE.mingenid;
 declare variable maxgenid type of column PALLET_TYPE.maxgenid;
 declare variable prefixbc type of column PALLET_TYPE.prefix;
 declare variable prefixnum type of column PALLET_TYPE.prefixnum;
 declare variable palnumlength type of column PALLET_TYPE.palnumlength;
begin
    if (new.whid is NULL or new.zoneid is NULL) then
    begin
        select sz.zoneid, sz.objid
          from employee e
               left join sitezone sz on sz.zoneid = e.currentzone
         where e.employeeid = new.manid
          into new.zoneid, new.whid;

        if (new.zoneid is NULL) then
            exception exc_wh_workeremptyzone;
        else if (new.whid is NULL) then
            exception exc_wh_workeremptywh;
    end
    else if (new.zoneid is NULL) then
    begin
        select e.currentzone
          from employee e
         where e.employeeid = new.manid
          into new.zoneid;
        if (new.zoneid is NULL) then
            exception exc_wh_workeremptyzone;
    end
    else if (new.whid is NULL) then
    begin
        select sz.objid
          from employee e
               left join sitezone sz on sz.zoneid = e.currentzone
         where e.employeeid = new.manid
          into new.whid;
        if (new.whid is NULL) then
            exception exc_wh_workeremptywh;
    end
    if (new.enabled is NULL) then new.enabled = '1';

    if (new.number is NULL) then
    begin
        flag = '1';
    
        select coalesce(pt.prefix,''), coalesce(pt.prefixnum, ''),
               coalesce(pt.mingenid, 9999), coalesce(pt.maxgenid, 99999),
               coalesce(pt.palnumlength, 6)
          from pallet_type pt
         where pt.code = 'CR'
          into :prefixbc, :prefixnum, :mingenid, :maxgenid, :palnumlength;
        if (:palnumlength is NULL) then
            exception exc_k_common 'Не задана длина номера паллета';
    
        if (:generatorname is NULL) then
            generatorname = 'G_PALLET'|| trim(:prefixbc)|| 'BARCODE';
    
        while (:flag = '1') do
        begin
          execute statement 'select GEN_ID('|| :generatorname ||', 1)
                                     from wm_config'
              into :palnumber;
          if (:palnumber > :maxgenid) then
          begin
            execute statement 'select GEN_ID(' || :generatorname || ',-' || cast((:palnumber - :mingenid) as varchar(10)) ||')
                                         from wm_config'
                into :palnumber;
    
            update pallet_type pt
               set pt.series = coalesce(pt.series, 0) +1
             where pt.code = 'CR';
          end
    
          --new.number =  :linenumber || cast(:pcode as varchar(7)) || padleft(cast(:palnumber as varchar(9)),9,'0');
          new.number =  :prefixnum || padleft(cast(:palnumber as varchar(6)), :palnumlength ,'0');
    
          update pallet_comeretprint pfp
             set pfp.enabled = '0'
           where pfp.number = new.number
                 and pfp.enabled = '1';
    
          update pallet p
             set p.status = '2'
           where p.number = new.number
                 and p.status = '0';
    
          if (not exists(select *
                           from pallet p
                          where p.number = new.number
                            and p.status = '1')) then flag = '0';
        end
    end

    if (new.barcode is NULL) then
        new.barcode = 'P'||new.number;

    if (new.datetime is NULL) then
        new.datetime = current_timestamp;
end
^


/* Trigger: PALLET_COMERETPRINT_BU */
CREATE OR ALTER TRIGGER PALLET_COMERETPRINT_BU FOR PALLET_COMERETPRINT
ACTIVE BEFORE UPDATE POSITION 0
as
begin
    if (old.palletid is NULL and new.palletid is NOT NULL and new.enabled = '1') then
        new.enabled = '0';
end
^


SET TERM ; ^



/******************************************************************************/
/***                          Fields descriptions                           ***/
/******************************************************************************/

COMMENT ON COLUMN PALLET_COMERETPRINT.ENABLED IS
'Признак актуальности этикетки, после печати 1- этикетка актуальна, после того, как ее использовали 0-этикетка не актуальн';



/******************************************************************************/
/***                               Privileges                               ***/
/******************************************************************************/


/* Privileges of users */
GRANT ALL ON PALLET_COMERETPRINT TO DBADMIN WITH GRANT OPTION;

